/** \brief Pwm_PBcfg.h
 **
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */
#ifndef PWM_PBCFG_H_INCLUDED
#define PWM_PBCFG_H_INCLUDED

/*==================[inclusions]============================================*/
/*==================[macros]================================================*/
/* Number of configured config sets. */
#define PWM_CONFIG_SET_COUNT 1u



/* Number of logical channels for current config set. */
#define PWM_CFG0_CHANNEL_COUNT 6u

/* Number of channel groups for current config set. */
#define PWM_CFG0_GROUP_COUNT 0u

/* Number of channels of all groups for current config set. */
#define PWM_CFG0_CHANNELS_IN_GROUPS_COUNT 0u

/* Configuration information of all channels for current config set. */
#define PWM_CFG0_CHANNEL_CONFIGS \
{\
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_37, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    40u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[0], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    0u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  }, \
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_39, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    40u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[1], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    1u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  }, \
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_17, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    5000u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[2], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    2u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  }, \
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_5, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    5000u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[3], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    3u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  }, \
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_18, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    5000u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[4], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    4u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  }, \
  { \
    PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_6, /* BaseAddress */ \
          PWM_16BIT_TICK_MAX, /* TimerMax */ \
    1000000u, /* TickFrequency */ \
    5000u, /* DefaultPeriodTicks */ \
    0u, /* DefaultTriggerOutputTicks */ \
    0u, /* OutputOffsetTicks */ \
    NULL_PTR, /* DelayConfigPtr */ \
    &Pwm_ChannelState[5], /* ChannelStatePtr */ \
    NULL_PTR, /* NotifyFunction */ \
    PWM_HIGH, /* ActiveOutput */ \
    PWM_LINESTATE_PWM, /* PwmOutput at Init */ \
    PWM_LINESTATE_PWM_INV, /* Pwm compl output at Init */ \
    PWM_FIXED_PERIOD, /* ChannelClass */ \
    PWM_LOW, /* IdleState */ \
    5u, /* ChannelId */ \
    0u, /* DefaultDuty */ \
    0u, /* DefaultPrescalerValue */ \
    PWM_LEFT_ALIGNED, /* OutAlignment */ \
    PWM_TRIGGER_SYNC_PERIOD, /* TriggerFactor */ \
    PWM_TRIGGER_DISABLE, /* TriggerOutputSelect */ \
    PWM_INVALID_TRIGGERVALUE, /* InputStopTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* SwitchTrigger*/ \
    PWM_INVALID_TRIGGERVALUE, /* InputStartTrigger */ \
    PWM_FALSE, /* DebugMode */ \
    PWM_TRUE, /* StartAtInit */ \
    PWM_FALSE, /* SetOutputEnable */ \
    PWM_FALSE, /* OutputOffsetEnable */ \
    PWM_FALSE, /* OutputOffsetScaled */ \
    PWM_FALSE, /* HwTriggerOutputScaled */ \
    PWM_FALSE, /* GroupStartDelayEnable */ \
    PWM_FALSE /* MaxChannelIdInGroup */ \
  } \
}

/* Number of delay timers for current config set. */
#define PWM_CFG0_DELAYS_IN_CHANNELS_COUNT 0u


/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_FANPWM1_Port12_1 ((Pwm_PeriodType)40u)
/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_FANPWM2_Port12_3 ((Pwm_PeriodType)40u)
/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_GreenIND1_Port0_1 ((Pwm_PeriodType)5000u)
/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_GreenIND2_Port2_2 ((Pwm_PeriodType)5000u)
/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_AmberIND1_Port0_0 ((Pwm_PeriodType)5000u)
/* Symbolic name for period default of a PWM channel. */
#define PwmConf_PwmChannelConfigSet_0_PwmPeriodDefault_PwmChannel_AmberIND2_Port2_1 ((Pwm_PeriodType)5000u)

/* Symbolic names for PWM config setting. */
#define PwmConf_PwmChannelConfigSet_PwmChannelConfigSet_0 (Pwm_Config[0u]) /* Symbolic names for PWM config setting */

/* Max channel number for all config set. */
#define PWM_MAX_CHANNELNUMBER 6u

/* List of hardware assigned channel identifier for current config set. */
#define PWM_CFG0_RESASSINGED_CHANNELID \
{ \
  2u, /* TCPWM_0_17 */ \
  4u, /* TCPWM_0_18 */ \
  0u, /* TCPWM_0_37 */ \
  1u, /* TCPWM_0_39 */ \
  3u, /* TCPWM_0_5 */ \
  5u /* TCPWM_0_6 */ \
}


/* Register base address of TCPWM hardware unit TCPWM_0_17.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_17
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_17  0x40380880u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_17 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_17 0u

/* Register base address of TCPWM hardware unit TCPWM_0_18.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_18
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_18  0x40380900u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_18 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_18 1u

/* Register base address of TCPWM hardware unit TCPWM_0_37.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_37
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_37  0x40381280u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_37 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_37 2u

/* Register base address of TCPWM hardware unit TCPWM_0_39.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_39
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_39  0x40381380u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_39 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_39 3u

/* Register base address of TCPWM hardware unit TCPWM_0_5.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_5
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_5  0x40380280u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_5 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_5 4u

/* Register base address of TCPWM hardware unit TCPWM_0_6.
   The macro can be overridden by the integrator via command line parameter.
   Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_6
/* Base register address of HW timer channel. */
#define PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_6  0x40380300u
#else
/* Deviation from MISRA-C:2004 rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning PWM_CFG_REGISTER_BASE_ADDRESS_TCPWM_0_6 is overridden by the environment. This is not intended for production software!
#endif

/* Hardware resource index for all config set */
#define PWM_HWRESOURCE_0_6 5u


/* Number of hardware resource for all config set */
#define PWM_HWRESOURCE_NUMBER  6u

/* Configuration information for all config sets */
#define PWM_CFG_CONFIG \
{ \
  { \
    Pwm_Config0_ChannelConfig, \
    Pwm_Config0_GroupConfig,   \
    Pwm_Config0_ResChannelList,\
    PWM_CFG0_CHANNEL_COUNT,    \
    PWM_CFG0_GROUP_COUNT       \
  } \
}
/*==================[type definitions]=======================================*/
/*==================[external function declarations]=========================*/
/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
#define PWM_START_SEC_CONST_ASIL_B_UNSPECIFIED
#include <Pwm_MemMap.h>

extern CONST(Pwm_ConfigType, PWM_CONST) Pwm_Config[PWM_CONFIG_SET_COUNT];

#define PWM_STOP_SEC_CONST_ASIL_B_UNSPECIFIED
#include <Pwm_MemMap.h>
#endif /*!defined(PWM_PBCFG_H_INCLUDED)*/
