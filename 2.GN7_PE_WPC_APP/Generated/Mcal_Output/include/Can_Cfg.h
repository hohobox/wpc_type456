/** \brief Can_Cfg.h
 **
 ** This generated interface declares configuration items.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

#ifndef CAN_CFG_H_INCLUDED
#define CAN_CFG_H_INCLUDED

/*==================[inclusions]============================================*/

#include <Std_Types.h>
#include <Os.h>

/*==================[macros]================================================*/


/** The support of the Can_ChangeBaudrate API is optional. If this parameter is set
 to true the Can_ChangeBaudrate API shall be supported. Otherwise the API is not
 supported.  */
/** \brief Specifies if the Can_ChangeBaudrate API is supported */
#define CAN_CHANGE_BAUDRATE_API  STD_OFF

/** The support of the Can_CheckWakeup API is optional. If this parameter is set
 to true the Can_CheckWakeup API shall be supported. Otherwise the API is not
 supported.  */
/** \brief Specifies if the Can_CheckWakeup API is supported */
#define CAN_CHECK_WAKEUP_API  STD_ON

/** Switches the Development Error Notification ON or OFF. */
#define CAN_DEV_ERROR_DETECT  STD_ON

/** Switches the diagnostic event manager Notification ON or OFF. */
#define CAN_DEM_E_HW_ERROR STD_ON
#define CAN_INTERNAL_E_HW_ERROR DemConf_DemEventParameter_CAN_E_HARDWARE_ERROR

/** The support of the Can_GetStatus API is optional. If this parameter is set
 to true the Can_GetStatus API shall be supported. Otherwise the API is not
 supported.  */
/** \brief Specifies if the Can_GetStatus API is supported */
#define CAN_GET_STATUS_API  STD_ON

/** Switches the Can_DeInit() API ON or OFF. */
#define CAN_DEINIT_API  STD_OFF

/** Switches the Can_SetBaudrateInChangedClock() API ON or OFF. */
#define CAN_SET_BAUDRATE_IN_CHANGED_CLOCK_API  STD_OFF

/** Switches the Can_GetVersionInfo() API ON or OFF. */
#define CAN_GET_VERSION_INFO_API  STD_ON

/** Specifies if hardware cancellation shall be supported. ON or OFF  */
#define CAN_HW_TRANSMIT_CANCELLATION  STD_OFF

/** Enables/disables cancellation of pending PDUs with identical ID.
    Is used as a boolean function parameter. */
#define CAN_IDENTICAL_ID_CANCELLATION  FALSE

/** This parameter defines the existence and the name of a callout function that is
 called after a successful reception of a received CAN Rx L-PDU (usually
 CanIf_RxIndication). If this parameter is omitted (#undef) no callout takes
 place.  */
/* CAN_LPDU_RECEIVE_CALLOUT_FUNCTION is not defined and will not be called. */

/** ID of the OS counter configured as CanOsCounterRef. */
#define CAN_OS_COUNTER_ID OsCounter_0

/** Specifies if pretended networking mode shall be supported. ON or OFF  */
#define CAN_PUBLIC_ICOM_SUPPORT  STD_OFF

/** Switches the parameter list of Can_RxIndication() compliant to ASR 4.0.3 or to ASR 4.2.2. 
 Possible assignable values:
 - CAN_ASR_422_COMPATIBILITY
 - CAN_ASR_403_COMPATIBILITY */
#define CAN_RX_INDICATION_COMPATIBILITY CAN_ASR_422_COMPATIBILITY

/** The support of the Can_SetBaudrate API is optional. If this parameter is set
 to true the Can_SetBaudrate API shall be supported. Otherwise the API is not
 supported.  */
/** \brief Specifies if the Can_SetBaudrate API is supported */
#define CAN_SET_BAUDRATE_API  STD_OFF

/** Specifies the maximum time for blocking function until a timeout is
 detected. Unit is ticks. */
#define CAN_TIMEOUT_DURATION 5uL

/** Switches the call of CanIf_TriggerTransmit operation on or off. */
#define CAN_TRIGGER_TRANSMIT_SUPPORT STD_OFF

/*------------------[Cypress module config version identification]---------*/

#if (defined CAN_CFG_MAJOR_VERSION) /* to prevent double declaration */
#error CAN_CFG_MAJOR_VERSION already defined
#endif /* if (defined CAN_CFG_MAJOR_VERSION) */

/** Driver config major version */
#define CAN_CFG_MAJOR_VERSION 1u


#if (defined CAN_CFG_MINOR_VERSION) /* to prevent double declaration */
#error CAN_CFG_MINOR_VERSION already defined
#endif /* if (defined CAN_CFG_MINOR_VERSION) */

/** Driver config minor version */
#define CAN_CFG_MINOR_VERSION 17u


#if (defined CAN_CFG_PATCH_VERSION) /* to prevent double declaration */
#error CAN_CFG_PATCH_VERSION already defined
#endif /* if (defined CAN_CFG_PATCH_VERSION) */

/** Driver config patch version */
#define CAN_CFG_PATCH_VERSION 0u

/*------------------[symbolic names]----------------------------------------*/

/* Initialization structure according to ECUM182_Conf (not a symbolic name). */
#define CanConfigSet (Can_Config[0u])

/* CanController symbolic names */
#define CanConf_CanController_0_WPC_BCAN                            0u
#define CanConf_CanController_0_WPC_LCAN                            1u

/* CanHardwareObject symbolic names */
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x7df_BCAN_GST_ALL   0u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x725_BCAN_GST_WPC   1u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x4da_BCAN_CLU_09_00ms   2u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x4d1_BCAN_CLU_05_00ms   3u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x401_BCAN_BDC_FD_SMK_02_200ms   4u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x3e2_BCAN_PDC_FD_03_200ms   5u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x3d4_BCAN_BDC_FD_05_200ms   6u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x3d1_BCAN_BDC_FD_02_200ms   7u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x366_BCAN_HU_GW_03_200ms   8u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x351_BCAN_IAU_FD_04_200ms   9u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x33e_BCAN_SBCM_RL_FD_01_200ms  10u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x33d_BCAN_SBCM_RR_FD_01_200ms  11u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x32d_BCAN_SBCM_DRV_FD_01_200ms  12u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x32b_BCAN_SBCM_AST_FD_01_200ms  13u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x315_BCAN_CLU_20_200ms  14u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x314_BCAN_RWPC_FD_01_200ms  15u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x2e9_BCAN_PDC_FD_15_300ms  16u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x1aa_BCAN_CLU_01_20ms  17u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x116_BCAN_HU_USM_05_00ms  18u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x114_BCAN_HU_USM_04_00ms  19u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x112_BCAN_HU_USM_02_00ms  20u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x111_BCAN_HU_USM_01_00ms  21u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x105_BCAN_EMS_07_10ms  22u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x100_BCAN_EMS_02_10ms  23u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0xfa_BCAN_HCU_03_10ms  24u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_BCAN_0x35_BCAN_VCU_01_10ms  25u
#define CanConf_CanHardwareObject_0_IN_HwObj_0x17fc0000_0x17fc00fe_WPC_BCAN_NM_Message  26u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0xc000104_LCAN_L_TP_BDC_FD_L_WPC_FD  27u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x8000050_LCAN_L_BDC_FD_IAU_10_200ms  28u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x4000050_LCAN_L_BDC_FD_IAU_01_00ms  29u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x43f_LCAN_CCU_01_00ms  30u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x352_LCAN_IAU_FD_05_200ms  31u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x351_LCAN_IAU_FD_04_200ms  32u
#define CanConf_CanHardwareObject_0_IN_HwObj_WPC_LCAN_0x2e9_LCAN_PDC_FD_15_300ms  33u
#define CanConf_CanHardwareObject_0_IN_HwObj_0x17fc0000_0x17fc00fe_WPC_LCAN_NM_Message  34u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x21f_BCAN_WPC_FD_VCRM_01_00ms  35u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x391_BCAN_WPC_FD_01_200ms  36u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x392_BCAN_WPC2_FD_01_200ms  37u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x686_BCAN_WPCmsgDvp1  38u
#define CanConf_CanHardwareObject_0_OUT_WPC_BCAN_HwObj_0x0_BASIC      39u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x17fc009e_BCAN_NM_WPC_FD  40u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_BCAN_0x1ec7b001_BCAN_WPC_WU_01_500ms  41u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_LCAN_0x4000070_LCAN_L_WPC_FD_01_00ms  42u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_LCAN_0x8000070_LCAN_L_WPC_FD_20_200ms  43u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_LCAN_0xc000105_LCAN_L_TP_L_WPC_FD_BDC_FD  44u
#define CanConf_CanHardwareObject_0_OUT_HwObj_WPC_LCAN_0x17fc001e_LCAN_NM_L_WPC_FD  45u

/* Interrupt channel symbolic names */
#define CAN_INTERRUPT_59   0u
#define CAN_INTERRUPT_68   1u

/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

#define CAN_START_SEC_CODE_ASIL_B
#include "Can_MemMap.h"

/** \brief Can_Interrupt_CANFD02_Cat1
 **
 ** Category 1 interrupt service routine for vector 59 of channel CANFD02.
 **
 */
extern ISR_NATIVE(Can_Interrupt_CANFD02_Cat1);

/** \brief Can_Interrupt_CANFD02_Cat2
 **
 ** Category 2 interrupt service routine for vector 59 of channel CANFD02.
 **
 */
extern ISR(Can_Interrupt_CANFD02_Cat2);

/** \brief Can_Interrupt_CANFD13_Cat1
 **
 ** Category 1 interrupt service routine for vector 68 of channel CANFD13.
 **
 */
extern ISR_NATIVE(Can_Interrupt_CANFD13_Cat1);

/** \brief Can_Interrupt_CANFD13_Cat2
 **
 ** Category 2 interrupt service routine for vector 68 of channel CANFD13.
 **
 */
extern ISR(Can_Interrupt_CANFD13_Cat2);

#define CAN_STOP_SEC_CODE_ASIL_B
#include "Can_MemMap.h"

#endif /**defined(CAN_CFG_H_INCLUDED)*/

/*==================[end of file]===========================================*/
