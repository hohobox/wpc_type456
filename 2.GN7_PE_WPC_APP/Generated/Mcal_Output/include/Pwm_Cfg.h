/** \brief Pwm_Cfg.h
 **
 ** Interface Pwm_Cfg
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

#ifndef PWM_CFG_H_INCLUDED
#define PWM_CFG_H_INCLUDED

/*==================[inclusions]============================================*/
#include <Std_Types.h>
#include <Os.h>

/*==================[macros]================================================*/

/* Switches the Development Error Notification ON or OFF. */
#define PWM_DEV_ERROR_DETECT  STD_ON

/* This parameter defines the existence and the name of a callout function that is
 called each time an error was detected.
 The function has to have the following parameters: (ModuleId: uint16,
 InstanceId: uint8, ApiId: uint8, ErrorId: uint8) */
#define PWM_ERROR_CALLOUT_FUNCTION Det_ReportError

/* API restriction */

/* Adds / removes the service Pwm_DeInit() from the code */
#define PWM_DE_INIT_API STD_ON

/* Adds / removes the service Pwm_GetOutputState() from the code */
#define PWM_GET_OUTPUT_STATE_API STD_ON

/* Adds / removes the service Pwm_SetDutyCycle() from the code */
#define PWM_SET_DUTY_CYCLE_API STD_ON

/* Adds / removes the service Pwm_SetOutputToIdle() from the code */
#define PWM_SET_OUTPUT_TO_IDLE_API STD_ON

/* Adds / removes the service PwmSetPeriodAndDuty() from the code */
#define PWM_SET_PERIOD_AND_DUTY_API STD_ON

/* Adds / removes the service Pwm_GetVersionInfo() from the code */
#define PWM_GET_VERSION_INFO_API STD_ON

/* Adds / removes the service Pwm_SetChannelOutput() from the code */
#define PWM_SET_OUTPUT_STATUS_API               STD_OFF

/* Adds / removes the service Pwm_SetOutputOffset() from the code */
#define PWM_SET_OUT_OFFSET_API                  STD_OFF

/* Adds / removes the service Pwm_StopGroupTrigger() from the code */
#define PWM_STOPGROUPTRIGGER_SUPPORTED          STD_OFF

/* Adds / removes the service Pwm_SetPrescaler() from the code */
#define PWM_SET_PRESCALER_API                   STD_OFF

/* Adds / removes the service Pwm_SetTriggerDelay() from the code */
#define PWM_SET_TRIGGER_DELAY_API           STD_OFF

/* Adds / removes the service Pwm_EnableTrigger() and Pwm_DisableTrigger() from the code */
#define PWM_ENABLETRIGGER_SUPPORTED             STD_OFF

/* Adds / removes the service Pwm_SetDutyCycleBuffer() from the code */
#define PWM_SET_DUTYCYCLE_BUFFER_API          STD_OFF

/* Adds / removes the service Pwm_SetDutyAndChannelOutputBuffer() from the code */
#define PWM_SET_DUTYANDCHANNEL_OUTPUTBUFFER_API                   STD_OFF

/* Adds / removes the service Pwm_SetChannelOutputBuffer() from the code */
#define PWM_SET_CHANNEL_OUTPUTBUFFER_API                   STD_OFF

/* Adds / removes the service Pwm_EnableNotification() and Pwm_DisableNotification() from the code */
#define PWM_NOTIFICATION_SUPPORTED STD_ON

/* Switch for enabling the update of the duty cycle parameter at the end of the current period. */
#define PWM_DUTYCYCLE_UPDATEDENDPERIOD PWM_TRUE

/* Switch for enabling the update of the period parameter at the end of the current period. */
#define PWM_PERIOD_UPDATEDENDPERIOD PWM_TRUE

/* Switch for enabling the multiple update in period. */
#define PWM_WAITINGUPDATE_SUPPORTED PWM_TRUE

/*--------------------------------------------------------------------------*/

/* channel symbolic names */

/* symbolic name for PwmChannel_FANPWM1_Port12_1 */
#define PwmConf_PwmChannel_PwmChannel_FANPWM1_Port12_1  ((Pwm_ChannelType)0u) 
/* symbolic name for PwmChannel_FANPWM2_Port12_3 */
#define PwmConf_PwmChannel_PwmChannel_FANPWM2_Port12_3  ((Pwm_ChannelType)1u) 
/* symbolic name for PwmChannel_GreenIND1_Port0_1 */
#define PwmConf_PwmChannel_PwmChannel_GreenIND1_Port0_1  ((Pwm_ChannelType)2u) 
/* symbolic name for PwmChannel_GreenIND2_Port2_2 */
#define PwmConf_PwmChannel_PwmChannel_GreenIND2_Port2_2  ((Pwm_ChannelType)3u) 
/* symbolic name for PwmChannel_AmberIND1_Port0_0 */
#define PwmConf_PwmChannel_PwmChannel_AmberIND1_Port0_0  ((Pwm_ChannelType)4u) 
/* symbolic name for PwmChannel_AmberIND2_Port2_1 */
#define PwmConf_PwmChannel_PwmChannel_AmberIND2_Port2_1  ((Pwm_ChannelType)5u) 


/*------------------[Cypress module config version identification]---------*/

#if (defined PWM_GEN_MAJOR_VERSION) /* to prevent double declaration */
#error PWM_GEN_MAJOR_VERSION already defined
#endif /* if (defined PWM_GEN_MAJOR_VERSION) */

/* Driver config major version */
#define PWM_GEN_MAJOR_VERSION 1u

#if (defined PWM_GEN_MINOR_VERSION) /* to prevent double declaration */
#error PWM_GEN_MINOR_VERSION already defined
#endif /* if (defined PWM_GEN_MINOR_VERSION) */

/* Driver config minor version */
#define PWM_GEN_MINOR_VERSION 15u

#if (defined PWM_GEN_PATCH_VERSION) /* to prevent double declaration */
#error PWM_GEN_PATCH_VERSION already defined
#endif /* if (defined PWM_GEN_PATCH_VERSION) */

/* Driver config patch version */
#define PWM_GEN_PATCH_VERSION 2u

#if (defined PWM_GEN_MODULE_ID) /* to prevent double declaration */
#error PWM_GEN_MODULE_ID already defined
#endif /* if (defined PWM_GEN_MODULE_ID) */

/* Module identifier */
#define PWM_GEN_MODULE_ID       121u

#if (defined PWM_GEN_VENDOR_ID) /* to prevent double declaration */
#error PWM_GEN_VENDOR_ID already defined
#endif /* if (defined PWM_GEN_VENDOR_ID) */

/* Vendor identifier */
#define PWM_GEN_VENDOR_ID        66u

#if (defined PWM_GEN_AR_RELEASE_MAJOR_VERSION) /* to prevent double declaration */
#error PWM_GEN_AR_RELEASE_MAJOR_VERSION already defined
#endif /* if (defined PWM_GEN_AR_RELEASE_MAJOR_VERSION) */

/* AUTOSAR specification configuration major version */
#define PWM_GEN_AR_RELEASE_MAJOR_VERSION        4u

#if (defined PWM_GEN_AR_RELEASE_MINOR_VERSION) /* to prevent double declaration */
#error PWM_GEN_AR_RELEASE_MINOR_VERSION already defined
#endif /* if (defined PWM_GEN_AR_RELEASE_MINOR_VERSION) */

/* AUTOSAR specification configuration minor version */
#define PWM_GEN_AR_RELEASE_MINOR_VERSION        2u

#if (defined PWM_GEN_AR_RELEASE_REVISION_VERSION) /* to prevent double declaration */
#error PWM_GEN_AR_RELEASE_REVISION_VERSION already defined
#endif /* if (defined PWM_GEN_AR_RELEASE_REVISION_VERSION) */

/* AUTOSAR specification configuration patch version */
#define PWM_GEN_AR_RELEASE_REVISION_VERSION     2u

/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

/* Interrupt function prototype */
#define PWM_START_SEC_CODE_ASIL_B
#include <Pwm_MemMap.h>


#define PWM_STOP_SEC_CODE_ASIL_B
#include <Pwm_MemMap.h>

/*==================[internal constants]====================================*/

/*==================[internal data]=========================================*/

/*==================[end of file]===========================================*/

#endif /*!defined(PWM_CFG_H_INCLUDED)*/

