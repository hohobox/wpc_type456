#ifndef SPI_CFG_DER_H_INCLUDED
#define SPI_CFG_DER_H_INCLUDED

/** \brief AUTOSAR SPI Driver
 **
 ** This file contains definitions for configuration related to hardware units.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]============================================*/
#include <Spi_Internal_Types.h>

/*==================[macros]================================================*/

/* SPI feature definitions */

/** Number of FIFO entries (determined by HW) */
#define SPI_DERIVATE_FIFO_SIZE  128U

/*  The next macros can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */

/* SCB base addresses */
/** Base address of SCB1 */
#ifndef SPI_SCB1_BASE_ADDRESS
/** Base-Address of hold clear bit of interrupt control unit. */
  #define SPI_SCB1_BASE_ADDRESS  0x40610000U
#else
  /* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning SPI_SCB1_BASE_ADDRESS is overridden by the environment. This is not intended for production software!
#endif

/** Base address of SCB5 */
#ifndef SPI_SCB5_BASE_ADDRESS
/** Base-Address of hold clear bit of interrupt control unit. */
  #define SPI_SCB5_BASE_ADDRESS  0x40650000U
#else
  /* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning SPI_SCB5_BASE_ADDRESS is overridden by the environment. This is not intended for production software!
#endif

/* DMA base addresses */


/* DMA Descriptor base addresses */

/*------------------[other HW dependent configuration]------------------ */

/* SCB register base address for SpiDriver */
#define SPI_SCB_REGS \
{ \
  (P2VAR(Spi_SCBRegsType, SPI_CONST, SPI_APPL_DATA))SPI_SCB1_BASE_ADDRESS, \
  (P2VAR(Spi_SCBRegsType, SPI_CONST, SPI_APPL_DATA))SPI_SCB5_BASE_ADDRESS \
}

/* DMA RX channel register base address for SpiDriver */
#define SPI_DMA_RX_CHANNEL_REGS \
{ \
  /* no DMA channel for SCB1 */ \
  (P2VAR(Spi_DmaChannelRegsType, SPI_CONST, SPI_APPL_DATA))NULL_PTR, \
  /* no DMA channel for SCB5 */ \
  (P2VAR(Spi_DmaChannelRegsType, SPI_CONST, SPI_APPL_DATA))NULL_PTR \
}


/* DMA TX channel register base address for SpiDriver */
#define SPI_DMA_TX_CHANNEL_REGS \
{ \
  /* no DMA for SCB1 */ \
  (P2VAR(Spi_DmaChannelRegsType, SPI_CONST, SPI_APPL_DATA))NULL_PTR, \
  /* no DMA for SCB5 */ \
  (P2VAR(Spi_DmaChannelRegsType, SPI_CONST, SPI_APPL_DATA))NULL_PTR \
}

/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

/*==================[external constants]====================================*/

/*==================[external data]=========================================*/

/*==================[external function definitions]=========================*/

#endif /* if !defined( SPI_CFG_DER_H_INCLUDED ) */
/*==================[end of file]===========================================*/
