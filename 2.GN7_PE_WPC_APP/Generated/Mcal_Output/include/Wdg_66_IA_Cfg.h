
#ifndef WDG_66_IA_CFG_H
#define WDG_66_IA_CFG_H 1

/** \brief AUTOSAR Wdg Driver
 **
 ** This file contains API definitions of the configuration of the
 ** AUTOSAR module Wdg that is target independent.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */


/*==================[inclusions]=============================================*/

#include <Os.h>
#include <Wdg_66_IA_Types.h>
#include <Wdg_66_IA_Cfg_Arch.h>      /* Architecture dependent configuration */

/*==================[macros]=================================================*/

/* Get version information */
#define WDG_66_IA_GEN_MODULE_ID           102U
#define WDG_66_IA_GEN_VENDOR_ID           66U
#define WDG_66_IA_GEN_VENDOR_API_INFIX    0x10U
#define WDG_66_IA_GEN_AR_RELEASE_MAJOR_VERSION    4U
#define WDG_66_IA_GEN_AR_RELEASE_MINOR_VERSION    2U
#define WDG_66_IA_GEN_AR_RELEASE_REVISION_VERSION 2U
#define WDG_66_IA_GEN_SW_MAJOR_VERSION    1U
#define WDG_66_IA_GEN_SW_MINOR_VERSION    16U
#define WDG_66_IA_GEN_SW_PATCH_VERSION    0U

/* API optimization switches */
#define WDG_66_IA_RUN_AREA_IS_RAM STD_OFF

#define WDG_66_IA_GET_VERSION_INFO_API STD_ON


/* DEM event references */
#define WDG_66_IA_E_DISABLE_REJECTED_INTERNAL  DemConf_DemEventParameter_WDG_E_DISABLE_REJECTED
#define WDG_66_IA_E_MODE_FAILED_INTERNAL       DemConf_DemEventParameter_WDG_E_MODE_FAILED
#define WDG_66_IA_E_HW_TIMEOUT_INTERNAL        DemConf_DemEventParameter_WDG_E_HW_TIMEOUT
#define WDG_66_IA_E_WDG_STOPPED_INTERNAL       DemConf_DemEventParameter_WDG_E_WDG_STOPPED
/* miscellaneous */
#define WDG_66_IA_TRIGGER_LOCATION 134281216

/* Exclusive areas defines */
#define WDG_66_IA_SCHM_ENTER_EXCLUSIVE_AREA()    SchM_Enter_Wdg_66_IA_WDG_EXCLUSIVE_AREA_0()
#define WDG_66_IA_SCHM_EXIT_EXCLUSIVE_AREA()     SchM_Exit_Wdg_66_IA_WDG_EXCLUSIVE_AREA_0()


/*------------------[Wdg Index Symbolic Names]-------------------------------*/
#define Wdg_66_IAConf_WdgGeneral_WdgGeneral  (0u)

/* User configured DET defines */
#define WDG_66_IA_DEV_ERROR_DETECT        ( STD_ON )

/* User configured DEM defines */
#define WDG_66_IA_DEM_E_MODE_FAIL         ( STD_OFF )

#define WDG_66_IA_DEM_E_DISABLE_REJECT    ( STD_OFF )

#define WDG_66_IA_DEM_E_HW_TIMEOUT    ( STD_OFF )

#define WDG_66_IA_DEM_E_WDG_STOPPED    ( STD_OFF )


#define WDG_66_IA_DISABLE_ALLOWED TRUE


/* This parameter defines the existence and the name of a callout function that
 * is called each time an error was detected.
 * The function has to have the following parameters: (ModuleId: uint16,
 * InstanceId: uint8, ApiId: uint8, ErrorId: uint8)
 */
#define WDG_66_IA_ERROR_CALLOUT_FUNCTION Det_ReportError



/*==================[type definitions]=======================================*/
/*==================[external function declarations]=========================*/
#define WDG_66_IA_START_SEC_CODE
#include <Wdg_66_IA_MemMap.h>


#define WDG_66_IA_STOP_SEC_CODE
#include <Wdg_66_IA_MemMap.h>

/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/




#endif /* #ifndef WDG_66_IA_CFG_H */
/*==================[end of file]============================================*/
