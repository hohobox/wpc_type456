#ifndef MCU_CFG_ARCH_H
#define MCU_CFG_ARCH_H 1

/** \brief AUTOSAR MCU Driver
 **
 ** This file contains API definitions of the configuration of the AUTOSAR module MCU that is
 ** target independent.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */


/*==================[inclusions]=============================================*/
#include <Std_Types.h>     /* AUTOSAR standard types */


/*==================[macros]=================================================*/

#define MCU_GEN_RESET_TYPE MCU_REG_RESET_TYPE_SW

#ifndef MCU_SYSTEM_CM0P_SCS_REG_BASE_ADDR
/* Base address of SYSTEM IP CM0P_SCS register */
#define MCU_SYSTEM_CM0P_SCS_REG_BASE_ADDR (0xE0000000u+0x0000E000u)
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_SYSTEM_CM0P_SCS_REG_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif


#ifndef MCU_SYSTEM_CM4_SCS_REG_BASE_ADDR
/* Base address of SYSTEM IP CM4_SCS register */
#define MCU_SYSTEM_CM4_SCS_REG_BASE_ADDR (0xE0000000u+0x0000E000u)
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_SYSTEM_CM4_SCS_REG_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_CPUSS_CPUSS_BASE_ADDR
/* Base address of CPUSS IP CPUSS register */
#define MCU_CPUSS_CPUSS_BASE_ADDR 0x40200000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_CPUSS_CPUSS_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_CPUSS_DW0_BASE_ADDR
/* Base address of CPUSS DW0 IP register */
#define MCU_CPUSS_DW0_BASE_ADDR 0x40280000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_CPUSS_DW0_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_CPUSS_DW1_BASE_ADDR
/* Base address of CPUSS DW1 IP register */
#define MCU_CPUSS_DW1_BASE_ADDR 0x40290000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_CPUSS_DW1_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_CPUSS_DMAC_BASE_ADDR
/* Base address of CPUSS DMAC IP register */
#define MCU_CPUSS_DMAC_BASE_ADDR 0x402A0000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_CPUSS_DMAC_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_CPUSS_FLASHC_BASE_ADDR
/* Base address of CPUSS IP FLASHC register */
#define MCU_CPUSS_FLASHC_BASE_ADDR 0x40240000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_CPUSS_FLASHC_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_SRSS_SRSS_BASE_ADDR
/* Base address of SRSS IP SRSS register */
#define MCU_SRSS_SRSS_BASE_ADDR 0x40260000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_SRSS_SRSS_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_SRSS_BACKUP_BASE_ADDR
/* Base address of SRSS IP BACKUP register */
#define MCU_SRSS_BACKUP_BASE_ADDR 0x40270000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_SRSS_BACKUP_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_PERI_PERI_BASE_ADDR
/* Base address of PERI IP PERI register */
#define MCU_PERI_PERI_BASE_ADDR 0x40000000u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_PERI_PERI_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_PERI_PCLK_BASE_ADDR
/* Base address of PERI IP PCLK register */
#define MCU_PERI_PCLK_BASE_ADDR (0x40000000u)
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_PERI_PCLK_BASE_ADDR is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_PERI_DIVCMD_OFFSET_VALUE
/* Offset value of PERI IP DIV_CMD register */
#define MCU_PERI_DIVCMD_OFFSET_VALUE 0x00000400u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_PERI_DIVCMD_OFFSET_VALUE is overridden by the environment. This is not intended for production software!
#endif

#ifndef MCU_PERI_PERIGROUP_OFFSET_VALUE
/* Offset value of PERI IP PERI_GROUP register */
#define MCU_PERI_PERIGROUP_OFFSET_VALUE 0u
#else
/* Deviation from MISRA-C:2004 Rule 19.16, MISRA-C:2012 Rule-20.13.
   Justification: The preprocessing directive is a warning that indicates a special build configuration which is not suitable for production software. */
/* PRQA S 3115 1 */
#warning MCU_PERI_PERIGROUP_OFFSET_VALUE is overridden by the environment. This is not intended for production software!
#endif

/* It is necessary to wait 10 cycles for reference clock or CCO before disabling FLL. */
/* If FLL has already been enabled before calling Mcu_InitClock() by startup code */
/* it is difficult to calculate the correct wait cycles. */
/* So its default value will be calculated by following formula. */
/* FLL wait cycle = 10 * (clk_fast max / ref_clk min) = 10 * (400MHz / 32kHz) = 125000 */
/* (The logical ref_clk_min value is 1kHz but actually it will be 32kHz.) */
#define MCU_CYCLECOUNT_NUM_BEFORE_FLL_DISABLE               125000U
/* It is necessary to wait 5 cycles for reference clock or PLL before disabling PLL. */
/* If PLL has already been enabled before calling Mcu_InitClock() by startup code */
/* it is difficult to calculate the correct wait cycles. */
/* So its default value will be calculated by following formula. */
/* PLL wait cycle = 5 * (clk_fast max / ref_clk min) = 5 * (400MHz / 4MHz) = 500 */
#define MCU_CYCLECOUNT_NUM_BEFORE_PLL_DISABLE               500U
/* It is necessary to wait 5 cycles for reference clock or PLL before disabling PLL. */
/* If PLL has already been enabled before calling Mcu_InitClock() by startup code */
/* it is difficult to calculate the correct wait cycles. */
/* So its default value will be calculated by following formula. */
/* PLL wait cycle = 5 * (clk_fast max / ref_clk min) = 5 * (400MHz / 4MHz) = 500 */
#define MCU_CYCLECOUNT_NUM_BEFORE_SSCG_DISABLE              500U

/* Number of PLL */
#define MCU_NUMBER_OF_PLL 1u

#define MCU_CYCLECOUNT_NUM_BEFORE_PLL_DISABLE_DEFAULT \
{ \
  MCU_CYCLECOUNT_NUM_BEFORE_PLL_DISABLE, \
}
/* HW information */
#define MCU_HW_INFO \
{ \
  (uint8)8u,  /* Ram0MacroNum */\
}


/*==================[type definitions]=======================================*/
/*==================[external function declarations]=========================*/
/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/

# endif /* if !defined( MCU_CFG_ARCH_H ) */
/*==================[end of file]============================================*/
