/*******************************************************************************
**                                                                            **
**  (C) 2021 HYUNDAI AUTOEVER Corp.                                           **
**  Confidential Proprietary Information. Distribution Limited.               **
**  This source code is permitted to be used only in projects contracted      **
**  with Hyundai Autoever, and any other use is prohibited.                   **
**  If you use it for other purposes or change the source code,               **
**  you may take legal responsibility.                                        **
**  In this case, There is no warranty and technical support.                 **
**                                                                            **
**  FILE-NAME : BswM_Rule.h                                                   **
**                                                                            **
**  PRODUCT   : AUTOSAR BswM Module                                           **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 2.8.0                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/

/*
 * INPUT FILE:    Configuration\ECU\Ecud_BswM.arxml
 *                Configuration\ECU\Ecud_Com.arxml
 *                Configuration\ECU\Ecud_ComM.arxml
 *                Configuration\ECU\Ecud_EcuM.arxml
 *                Configuration\ECU\Ecud_NvM.arxml
 *                Configuration\ECU\Ecud_Os.arxml
 *                Configuration\ECU\Ecud_PduR.arxml
 * GENERATED ON: The time-stamp is removed
 */

#ifndef BSWM_RULE_H
#define BSWM_RULE_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/
#include "Std_Types.h"

/*******************************************************************************
**                      Global Data Types                                     **
*******************************************************************************/

/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/
#define BSWM_START_SEC_CODE
#include "MemMap.h"


extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_BCAN_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_BCAN_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_BCAN_SILENT_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_LCAN_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_LCAN_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeNotification_LCAN_SILENT_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_ENABLE_NM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_ENABLE_NM_TimerisNotStarted(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_ENABLE_NM_TimerisNotStarted(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_ENABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_ENABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_ENABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_ENABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_ENABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_ENABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_ENABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_ENABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_ENABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_ENABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_DISABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_DISABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_DISABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_DISABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_DISABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_DISABLE_NM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_DISABLE_NM_TimerisNotStopped(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_DISABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_DISABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC141_ENABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_DISABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_DISABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC153_ENABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_DISABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_DISABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_BCAN_PNC32_ENABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_DISABLE_NM_TimerisNotStopped(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_DISABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_DISABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC159_ENABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_DISABLE_RX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_DISABLE_TX(void);

extern FUNC(void, BSWM_CODE) Rule_ComControl_LCAN_PNC32_ENABLE_DM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_ENABLE_TX_NORM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_ENABLE_TX_NORM_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_DISABLE_TX_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_DISABLE_TX_NORM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_DISABLE_TX_NORM_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_TX_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_TX_NORM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_ENABLE_RX_TX_NORM_NM(void);

extern FUNC(void, BSWM_CODE) Rule_CanBorNotification_BCAN_COMPLETE(void);

extern FUNC(void, BSWM_CODE) Rule_CanBorNotification_BCAN_START(void);

extern FUNC(void, BSWM_CODE) Rule_CanBorNotification_LCAN_COMPLETE(void);

extern FUNC(void, BSWM_CODE) Rule_CanBorNotification_LCAN_START(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_BCAN_BUS_OFF(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_BCAN_CHANGE_BAUDRATE(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_BCAN_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_BCAN_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_BCAN_SILENT_COM(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_LCAN_BUS_OFF(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_LCAN_CHANGE_BAUDRATE(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_LCAN_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_LCAN_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_CanStateNotification_LCAN_SILENT_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC141_PNC_FULL_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC141_PNC_NO_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC141_PNC_PREPARE_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC141_PNC_READY_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC141_PNC_REQUESTED(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC153_PNC_FULL_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC153_PNC_NO_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC153_PNC_PREPARE_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC153_PNC_READY_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC153_PNC_REQUESTED(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC159_PNC_FULL_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC159_PNC_NO_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC159_PNC_PREPARE_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC159_PNC_READY_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC159_PNC_REQUESTED(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC32_PNC_FULL_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC32_PNC_NO_COMMUNICATION(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC32_PNC_PREPARE_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC32_PNC_READY_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_ComMModeNotification_PNC32_PNC_REQUESTED(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC141_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC141_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC153_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC153_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC159_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC159_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC32_FULL_COM(void);

extern FUNC(void, BSWM_CODE) Rule_ComModeRequest_PNC32_NO_COM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmApplicationUpdatedNotification_APP_NOT_UPDATED(void);

extern FUNC(void, BSWM_CODE) Rule_DcmApplicationUpdatedNotification_APP_UPDATED(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_DISABLE_TX_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_TX_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_TX_NORMAL(void);

extern FUNC(void, BSWM_CODE) Rule_DcmCommunicationControl_0_DCM_DISABLE_RX_TX_NORM_NM(void);

extern FUNC(void, BSWM_CODE) Rule_DcmControlDTCSetting_DISABLEDTCSETTING(void);

extern FUNC(void, BSWM_CODE) Rule_DcmControlDTCSetting_ENABLEDTCSETTING(void);

extern FUNC(void, BSWM_CODE) Rule_DcmEcuReset_HARD(void);

extern FUNC(void, BSWM_CODE) Rule_DcmEcuReset_SOFT(void);

extern FUNC(void, BSWM_CODE) Rule_DcmModeRapidPowerShutDown_DISABLE_RAPIDPOWERSHUTDOWN(void);

extern FUNC(void, BSWM_CODE) Rule_DcmModeRapidPowerShutDown_ENABLE_RAPIDPOWERSHUTDOWN(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_DEFAULT_SESSION(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_ECU_PROGRAMMING_MODE(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_EXTENDED_DIAGNOSTIC_MODE(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_EXTENDED_DIAGNOSTIC_SESSION(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_PROGRAMMING_SESSION(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_QUIESCENT_CURRENT_DIAGNOSTIC_MODE_START(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_SAFETY_SYSTEM_DIAGNOSTIC_SESSION(void);

extern FUNC(void, BSWM_CODE) Rule_DiagnosticSessionNotification_SLEEP_MODE_START_REQUEST(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_OFF(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_RESET(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_RUN_From_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_RUN_From_STARTUP(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_SHUTDOWN(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_STARTUP_THREE(void);

extern FUNC(void, BSWM_CODE) Rule_EcuStateTo_STARTUP_TWO(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_OFF(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_RESET(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_RUN(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_SHUTDOWN(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_STARTUP_THREE(void);

extern FUNC(void, BSWM_CODE) Rule_EcuState_STARTUP_TWO(void);

extern FUNC(void, BSWM_CODE) Rule_ShutdownTargetTo_OFF(void);

extern FUNC(void, BSWM_CODE) Rule_ShutdownTargetTo_RESET(void);

extern FUNC(void, BSWM_CODE) Rule_ShutdownTargetTo_RUN(void);

extern FUNC(void, BSWM_CODE) Rule_ShutdownTargetTo_SLEEP(void);

extern FUNC(void, BSWM_CODE) Rule_WakeupEventNotification_BCAN_RX(void);

extern FUNC(void, BSWM_CODE) Rule_WakeupEventNotification_BCAN_RX_POLL(void);

extern FUNC(void, BSWM_CODE) Rule_WakeupEventNotification_IGN1(void);

extern FUNC(void, BSWM_CODE) Rule_WakeupEventNotification_LCAN_RX(void);

extern FUNC(void, BSWM_CODE) Rule_WakeupEventNotification_LCAN_RX_POLL(void);


#define BSWM_STOP_SEC_CODE
#include "MemMap.h"

#endif /* BSWM_RULE_H */

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
