/*******************************************************************************
**  FILE-NAME: CtrlRam_Cfg.h                                                  **
**                                                                            **
**  (C) 2021 HYUNDAI AUTOEVER Corp.                                           **
**  Confidential Proprietary Information. Distribution Limited.               **
**  This source code is permitted to be used only in projects contracted      **
**  with Hyundai Autoever, and any other use is prohibited.                   **
**  If you use it for other purposes or change the source code,               **
**  you may take legal responsibility.                                        **
**  In this case, There is no warranty and technical support.                 **
**                                                                            **
**  MODULE-NAME: Controlled Ram Module                                        **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 1.0.8                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/

/*
 * INPUT FILE:    Configuration\ECU\Ecud_Dem.arxml
 *                Configuration\ECU\Ecud_CtrlRam.arxml
 * GENERATED ON: The time-stamp is removed
 */

#ifndef CTRLRAM_CFG_H
#define CTRLRAM_CFG_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/
#include "CtrlRam_Types.h"

/*******************************************************************************
**                      Common Published Information                          **
*******************************************************************************/
#define CtrlRam_AR_RELEASE_MAJOR_VERSION                   4
#define CtrlRam_AR_RELEASE_MINOR_VERSION                   0
#define CtrlRam_AR_RELEASE_REVISION_VERSION                3
#define CtrlRam_SW_MAJOR_VERSION                           1
#define CtrlRam_SW_MINOR_VERSION                           0
#define CtrlRam_SW_PATCH_VERSION                           8
#define CtrlRam_VENDOR_ID                                  (uint16)76
#define CtrlRam_MODULE_ID                                  (uint16)253

/*******************************************************************************
**                      Global Data Types                                     **
*******************************************************************************/
/* Enables/Disables Development error detection */
#define CTRLRAM_DEV_ERROR_DETECT            STD_ON

/* Defines Dem Container is present or not */
#define CTRLRAM_DEMERROR_REPORT             STD_OFF

/* 
 * CTRLRAM_RECOVERY STD_ON - Recovery mechanism is used for byte,          
 *                           word and long updates in both areas.   
 * CTRLRAM_RECOVERY STD_OFF - Recovery mechanism is not used
 */
#define CTRLRAM_RECOVERY                    STD_ON

/* 
 * Platform architecture type:                                            
 * LITTLE_ENDIAN_PLATFORM -  For Little Endian Platforms                 
 * BIG_ENDIAN_PLATFORM -  For Big Endian Platforms
 */
#define CTRLRAM_PLATFORM_ARCHITECTURE       LITTLE_ENDIAN_PLATFORM

/* 
 * Configuration mechanism for allowing reinitialization after each type of
 * reset                                                                      
 * CTRLRAM_VERIFY_AT_INIT STD_ON - controlled RAM area is checked and it is    
 *   decided if a reinitialization is needed depending on the data validity 
 * CTRLRAM_VERIFY_AT_INIT STD_OFF - controlled RAM area is reinitialized       
 *  without checking the data validity
 */
#define CTRLRAM_VERIFY_AT_INIT              STD_ON

/* Size of the largest data type defined in the Controlled RAM. */
#define CTRLRAM_STRUCT_BUFFER_SIZE          30



/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/
#define CTRLRAM_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void, CTRLRAM_CODE) CtrlRamConfigSet1_CB(void);

#define CTRLRAM_STOP_SEC_CODE
#include "MemMap.h"

#endif /* CTRLRAM_CFG_H */
/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
