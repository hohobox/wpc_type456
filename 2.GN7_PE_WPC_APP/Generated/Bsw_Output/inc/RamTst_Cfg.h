/*******************************************************************************
**  FILE-NAME: RamTst_Cfg.h                                                   **
**                                                                            **
**  MODULE-NAME: AUTOSAR RAM Test Module                                      **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 1.3.5                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/

/*
 * INPUT FILE:    Configuration\ECU\Ecud_Dem.arxml
 *                Configuration\ECU\Ecud_RamTst.arxml
 * GENERATED ON: The time-stamp is removed
 */
#ifndef RAMTST_CFG_H
#define RAMTST_CFG_H

/* polyspace:begin<MISRA-C:5.1:Not a defect:Justify with annotations> Necessary in logic */
/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/
#include "Std_Types.h"

/*******************************************************************************
**                      Version Information                                   **
*******************************************************************************/
/* AUTOSAR SPECIFICATION VERSION INFORMATION */
#define RAMTST_CFG_AR_RELEASE_MAJOR_VERSION                (4)
#define RAMTST_CFG_AR_RELEASE_MINOR_VERSION                (0)
#define RAMTST_CFG_AR_RELEASE_REVISION_VERSION             (3)
#define RAMTST_CFG_SW_MAJOR_VERSION                        (1)
#define RAMTST_CFG_SW_MINOR_VERSION                        (3)
#define RAMTST_CFG_SW_PATCH_VERSION                        (5)
/*******************************************************************************
**                      Common Published Information                          **
*******************************************************************************/
#define RAMTST_AR_RELEASE_MAJOR_VERSION                    (4)
#define RAMTST_AR_RELEASE_MINOR_VERSION                    (0)
#define RAMTST_AR_RELEASE_REVISION_VERSION                 (3)
#define RAMTST_SW_MAJOR_VERSION                            (1)
#define RAMTST_SW_MINOR_VERSION                            (3)
#define RAMTST_SW_PATCH_VERSION                            (5)
#define RAMTST_VENDOR_ID                                   ((uint16)76)
#define RAMTST_MODULE_ID                                   ((uint16)93)
/*******************************************************************************
**                      Global Data Types                                     **
*******************************************************************************/
/* Pre compile option for development error detection */
#define RAMTST_DEV_ERROR_DETECT             STD_ON

/* Pre Compile option for version check */
#define RAMTST_GET_VERSION_INFO_API         STD_OFF

/* Pre Compile option for disable / enable the function "RamTst_Allow" */
#define RAMTST_ALLOW_API                    STD_OFF

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_ChangeNumberOfTestedCells"
 */
#define RAMTST_CHANGE_NUMBER_OF_TESTED_CELLS_API STD_OFF

/* Pre Compile option for disable / enable the function "RamTst_GetAlgParams" */
#define RAMTST_GET_ALG_PARAMS_API           STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_GetExecutionStatus"
 */
#define RAMTST_GET_EXECUTION_STATUS_API     STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_GetNumberOfTestedCells"
 */
#define RAMTST_GET_NUMBER_OF_TESTED_CELLS_API STD_OFF

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_GetTestAlgorithm"
 */
#define RAMTST_GET_TEST_ALGORITHM_API       STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_GetTestResult"
 */
#define RAMTST_GET_TEST_RESULT_API          STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_GetTestResultPerBlock"
 */
#define RAMTST_GET_TEST_RESULT_PER_BLOCK_API STD_ON

/* Pre Compile option for disable / enable the function "RamTst_Resume" */
#define RAMTST_RESUME_API                   STD_OFF

/* Pre Compile option for disable / enable the function "RamTst_RunFullTest" */
#define RAMTST_RUN_FULL_TEST_API            STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_RunPartialTest"
 */
#define RAMTST_RUN_PARTIAL_TEST_API         STD_ON

/* 
 * Pre Compile option for disable / enable the function
 * "RamTst_SelectAlgParams"
 */
#define RAMTST_SELECT_ALG_PARAMS_API        STD_ON

/* Pre Compile option for disable / enable the function "RamTst_Stop" */
#define RAMTST_STOP_API                     STD_ON

/* Pre Compile option for disable / enable the function "RamTst_Suspend" */
#define RAMTST_SUSPEND_API                  STD_OFF

/* Preprocessor switch to select the test with low coverage ON or OFF */
#define RAMTST_LOW_COVERAGE_TEST_SELECTED   STD_OFF

/* Preprocessor switch to select the test with medium coverage ON or OFF */
#define RAMTST_MEDIUM_COVERAGE_TEST_SELECTED STD_ON

/* Preprocessor switch to select the test with medium coverage ON or OFF */
#define RAMTST_HIGH_COVERAGE_TEST_SELECTED  STD_OFF

/* 
 * This macro is the initial value for a RAM variable which could be
 * changed by the function "RamTst_SelectAlgParams"
 */
#define RAMTST_DEFAULT_ALG_PARAMS_ID        ((uint8)1)

/* 
 * This macro is the Minimum number of tested cells for one cyle of a
 * background test, as defined by implementer
 */
#define RAMTST_MIN_NUMBER_OF_TESTED_CELLS   ((uint32)1)

/* 
 * Size of RAM cells (in bits) which can be tested individually by the
 * given implementation
 */
#define RAMTST_CELL_SIZE                    ((uint8)32)

/* Defines number of blocks configured all over the module */
#define RAMTST_MAX_BLOCKID                  0x02U

/* Defines Cell size */
#define RAMTST_PATTERN_ZERO                 0x00000000

/* Defines Cell size */
#define RAMTST_PATTERN_ONE                  0xFFFFFFFFU

/* Defines Cell size */
#define RAMTST_PATTERN_TYPE_1               0x55555555UL

/* Defines Cell size */
#define RAMTST_PATTERN_TYPE_2               0xAAAAAAAAUL

/* Defines Dem Container is present or not */
#define RAMTST_DEMERROR_REPORT              STD_ON

/* Preprocessor switch for RamTstTestCompletedNotification */
#define RAMTST_TEST_COMPLETED_NOTIFICATION_SUPPORT STD_OFF

/* Preprocessor switch for RamTstTestErrorNotification */
#define RAMTST_TEST_ERROR_NOTIFICATION_SUPPORT STD_OFF

/* Preprocessor switch for coverage of the defined RamTstAlgParams set */
#define RAMTST_CRC_8_SUPPORT                STD_ON

/* Preprocessor switch for coverage of the defined RamTstAlgParams set */
#define RAMTST_CRC_16_SUPPORT               STD_OFF

/* Preprocessor switch for coverage of the defined RamTstAlgParams set */
#define RAMTST_CRC_32_SUPPORT               STD_OFF

/* Preprocessor switch for coverage of the defined RamTstAlgParams set */
#define RAMTST_CRC_8H2F_SUPPORT             STD_OFF

/* 
 * Preprocessor switch to select the extra check in Pattern Test Test ON or
 * OFF
 */
#define RAMTST_CHK_TRANS_ONETOZERO          STD_ON

/* Preprocessor assigned to max ID of algorithm type configured */
#define RAMTST_MAX_ALGORITHM_TYPE_ID        RAMTST_ALGORITHM_COVERAGE_MEDIUM

/* 
 * This macro defined the Number of configured parameter sets for the
 * available test algorithms
 */
#define RAMTST_NUMBER_OF_ALG_PARAM_SETS     (1U)

/* 
 * This macro defined the Number of configured parameter sets for the
 * available RAM blocks
 */
#define RAMTST_NUMBER_OF_BLOCKS             ((uint32)2)


typedef uint32 RamTst_CellType;

/* RamTst_AlgorithmType: status value returned by the API service
 * RamTst_GetTestAlgorithm()
 */
typedef enum
{
RAMTST_ALGORITHM_UNDEFINED = 0U, 
RAMTST_ALGORITHM_COVERAGE_MEDIUM
}RamTst_AlgorithmType;
/*******************************************************************************
**                      Configuration Set Handles                             **
*******************************************************************************/
#define  RamTstConf_RamTstBlockParams_AlgParams_MED_RamTstBlockParams_0\
  ((RamTst_NumberOfBlocksType)1)
#define  RamTstConf_RamTstBlockParams_AlgParams_MED_RamTstBlockParams_1\
  ((RamTst_NumberOfBlocksType)2)


/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/


/* polyspace:end<MISRA-C:5.1:Not a defect:Justify with annotations> Necessary in logic */

#endif /* RAMTST_CFG_H */
/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
