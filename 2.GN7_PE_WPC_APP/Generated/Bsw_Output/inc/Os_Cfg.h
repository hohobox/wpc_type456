/*******************************************************************************
**                                                                            **
**  (C) 2021 HYUNDAI AUTOEVER Corp.                                           **
**  Confidential Proprietary Information. Distribution Limited.               **
**  This source code is permitted to be used only in projects contracted      **
**  with Hyundai Autoever, and any other use is prohibited.                   **
**  If you use it for other purposes or change the source code,               **
**  you may take legal responsibility.                                        **
**  In this case, There is no warranty and technical support.                 **
**                                                                            **
**  FILE-NAME: Os_Cfg.h                                                       **
**                                                                            **
**  MODULE-NAME: AUTOSAR Os Module                                            **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 2.6.15                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/
/*
 * INPUT FILE:    Configuration\ECU\Ecud_Os.arxml
 * GENERATED ON: The time-stamp is removed
 */

/*******************************************************************************
**              PRE-JUSTIFICATION BEGIN (MISRA-C RULE CHECKER)                **
*******************************************************************************/
/* polyspace:begin<MISRA-C:1.1:Not a defect:Justify with annotations> Macro definitions are needed for performance and file size  */
/* polyspace:begin<MISRA-C:8.9:Not a defect:Justify with annotations> This variable is defined in .lsl file. So external definition is not visible in Polyspace */
/* polyspace:begin<MISRA-C:19.4:Not a defect:Justify with annotations> It does not affect system. Code is manually checked */
/* polyspace:begin<MISRA-C:19.7:Not a defect:Justify with annotations> Macro is needed to improving performance */

#ifndef OS_CFG_H
#define OS_CFG_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/

/*******************************************************************************
**                      Common Published Information                          **
*******************************************************************************/
#define OS_AR_RELEASE_MAJOR_VERSION                        4
#define OS_AR_RELEASE_MINOR_VERSION                        0
#define OS_AR_RELEASE_REVISION_VERSION                     3
#define OS_SW_MAJOR_VERSION                                1
#define OS_SW_MINOR_VERSION                                0
#define OS_SW_PATCH_VERSION                                0
#define OS_VENDOR_ID                                       (uint16)76
#define OS_MODULE_ID                                       (uint16)1
/*******************************************************************************
**                      Global Data Types                                     **
*******************************************************************************/

/*******************************************************************************
**                      Configuration Set Handles                             **
*******************************************************************************/

/*******************************************************************************
**                      Pre-compile options/Macros                            **
*******************************************************************************/
/* Enable or Disable Error hook */
#define OS_ERROR_HOOK                       STD_ON

/* Enable or Disable Pre task hook  */
#define OS_PRETASK_HOOK                     STD_OFF

/* Enable or Disable Startup hook */
#define OS_STARTUP_HOOK                     STD_ON

/* Enable or Disable Post task hook */
#define OS_POSTTASK_HOOK                    STD_OFF

/* Enable or Disable Shutdown hook */
#define OS_SHUTDOWN_HOOK                    STD_ON

/* Enable or Disable Protection hook */
#define OS_PROTECTION_HOOK                  STD_ON

/* Provide hook functions for profiling Task and CAT2 ISR state */
#define OS_PROFILING_HOOK                   STD_ON

/* memory protection */
#define OS_MEMORY_PROTECTION                STD_OFF

/* application  */
#define OS_APPLICATION                      STD_OFF

/* restart task  */
#define OS_RESTART_TASK                     STD_OFF

/* Enable or Disable Tasks  */
#define OS_TASK                             STD_ON

/* Enable or Disable Events */
#define OS_EVENT                            STD_ON

/* Enable or Disable Schedule Table */
#define OS_SCHEDTABLE                       STD_OFF

/* Enable or Disable Alarms */
#define OS_ALARM                            STD_ON

/* ScheduleTableSynch strategy Implicit */
#define OS_SCHED_IMPLICIT_SYNC              STD_OFF

/* ScheduleTableSynch strategy Implicit */
#define OS_SCHED_EXPLICIT_SYNC              STD_OFF

/* Os Multicore Support  */
#define OS_MULTICORE                        STD_OFF

/* Multiple activation support for task */
#define OS_MULTIPLE_ACTIVATION              STD_ON

/* Enable or Disable Resources */
#define OS_RESOURCE                         STD_ON

/* Enable or Disable Counters */
#define OS_COUNTER                          STD_ON

/* Enable or Disable Timing protection structures */
#define OS_TIMING_PROTECTION                STD_ON

/* Enable or Disable Spinlocks */
#define OS_SPINLOCK                         STD_OFF

/* Os Resource Timing Protection Execution Budget */
#define OS_RES_TP_EB                        STD_OFF

/* Os Task Timing Protection Execution Budget */
#define OS_TASK_TP_EB                       STD_ON

/*  Os Task Timing Protection Time Frame  */
#define OS_TASK_TP_TF                       STD_ON

/* Os Interrupt Lock Timing Protection Execution Budget */
#define OS_INTLOCK_TP_EB                    STD_ON

/* Os All Interrupt Lock Timing Protection Execution Budget  */
#define OS_ALLINTLOCK_TP_EB                 STD_ON

/* Precompile option to indicate that resource is used by an ISR */
#define OS_RES_INT_SHARE                    STD_OFF

/* Os Isr Timing Protection Execution Budget */
#define OS_ISR_TP_EB                        STD_OFF

/* Os Isr Timing Protection Time Frame */
#define OS_ISR_TP_TF                        STD_OFF

/* Enable or Disable Startup hook */
#define OS_APP_STARTUP_HOOK                 STD_OFF

/* Enable or Disable Shutdown hook  */
#define OS_APP_SHUTDOWN_HOOK                STD_OFF

/* Enable or Disable Error hook */
#define OS_APP_ERROR_HOOK                   STD_OFF

/* STANDARD or EXTENDED Error */
#define OS_STATUS                           EXTENDED

/* Processor name */
#define OS_PROCESSOR                        CYT2BL4CAS

/* Processor series name */
#define OS_PROCESSOR_SERIES                 CYT2BL

/* Use get service Id  */
#define OS_USE_GET_SERVICE_ID               STD_ON

/* Stack monitoring */
#define OS_STACK_MONITORING                 STD_ON

/* Resource Scheduler */
#define OS_RES_SCHEDULER                    STD_ON

/* Scalability class */
#define OS_SCALABILITY_CLASS                OS_SC2

/* User parameter access */
#define OS_USER_PARAMETER_ACCESS            STD_ON

/* Scheduling Policy */
#define OS_SCHEDULE_POLICY                  OS_PREEMPTIVE

/* Os Max Timing Protection Index */
#define OS_MAX_TP_INDEX                     3

/* Maximum priority of Task */
#define OS_MAX_PRIORITY                     20

/* Count for Nesting Level of CAT2 ISR */
#define OS_MAX_NEST_LEVEL                   2

/* Total number of application memory blocks */
#define OS_APP_MEMBLK_CNT                   0

/* Total number of Schedule actions across all Schedule Tables */
#define OS_ACTION_COUNT                     0

/* Total number of Counters */
#define OS_COUNTER_COUNT                    1

/* Total number of Application Modes */
#define OS_APPLMODE_COUNT                   1

/* Total number of Set event Alarm actions */
#define OS_SETEVENT_COUNT                   4

/* Total number of Callback Alarm actions */
#define OS_ACTIVATETASK_COUNT               6

/* Total number of Resources */
#define OS_RESOURCE_COUNT                   1

/* Total number of Auto start Tasks */
#define OS_AUTOSTARTTASK_COUNT              1

/* Total number of Callback Alarm actions */
#define OS_CALLBACK_COUNT                   0

/* Total number of Scheduled WatchDogs */
#define OS_SCHWDG_COUNT                     1

/* Total number of Auto start Alarms */
#define OS_AUTOSTARTALARM_COUNT             0

/* Total number of Timing protections */
#define OS_AUTOSTART_SCHED_COUNT            0

/* Total number of Schedule Tables */
#define OS_SCHEDULE_COUNT                   0

/* Total number of Timing protections */
#define OS_TIMINGPROTECTION_COUNT           1

/* Total number of Increment counter Alarm actions */
#define OS_INCCOUNTER_COUNT                 0

/* Total number of Internal resources  */
#define OS_INTERNAL_RESOURCE_COUNT          4

/* Total number of IOC callback function */
#define OS_IOC_CALLBACK_COUNT               0

/* Total number of IOC */
#define OS_IOC_COUNT                        0

/* Total number of Queued IOC */
#define OS_IOC_COUNT_QUEUED                 0

/* Total number of Unqueued IOC */
#define OS_IOC_COUNT_UNQUEUED               0

/* Total number of Restart Tasks */
#define OS_RESTART_TASK_COUNT               0

/* Os Number of cores */
#define OS_CORE_COUNT                       1

/* Os Number of spinlocks */
#define OS_SPINLOCK_COUNT                   0

/* Total number of Tasks */
#define OS_TASK_COUNT                       20

/* Total number of Hardware counters */
#define OS_HARDWARE_COUNTER_COUNT           1

/* Total number of Applications  */
#define OS_APPLICATION_COUNT                0

/* Total Number of Trusted Functions */
#define OS_TRUSTED_FUNC_COUNT               0

/* Total Number of Alarms */
#define OS_ALARM_COUNT                      10

/* Maximum activation count for Task */
#define OS_MAX_ACTIVATION_COUNT             1

/* Total number of Resources */
#define OS_RES_NESTING_COUNT                6

/* Start Index for trusted application */
#define OS_TRUSTED_START_INDX               0

/* Maximum number of memory blocks used for an Application */
#define OS_MAX_USED_MEMBLK                  0

/* User Stack Size */
#define OS_USER_STACK_SIZE                  1024u

/* Enable T1 integration */
#define OS_T1_INTEGRATION                   STD_OFF

/* Total number of Stack */
#define OS_STACK_COUNT                      8u


/*******************************************************************************
**                      Handle IDs                                            **
*******************************************************************************/

/* Alarm Handles */
#define OsAlarm_ASW_100ms                    ((AlarmType)4)
#define OsAlarm_ASW_10ms                     ((AlarmType)3)
#define OsAlarm_ASW_5ms                      ((AlarmType)6)
#define OsAlarm_BG_Fota                      ((AlarmType)7)
#define OsAlarm_BG_KeyM                      ((AlarmType)8)
#define OsAlarm_BSW_100ms                    ((AlarmType)2)
#define OsAlarm_BSW_10ms                     ((AlarmType)1)
#define OsAlarm_BSW_5ms_Com                  ((AlarmType)0)
#define OsAlarm_BSW_Crypto_Main              ((AlarmType)9)
#define OsAlarm_BSW_Mem_Process              ((AlarmType)5)

/* AppMode Handles */
#define OsAppMode0                           ((AppModeType)0)

/* Application Handles */
#define OsApplication0                       ((ApplicationType)0)

/* Counter Handles */
#define OsCounter_0                          ((CounterType)0)

/* Event Handles */
#define OsEvent_BSW_BG_Fota                  ((EventMaskType)8192)
#define OsEvent_BSW_Crypto_Main              ((EventMaskType)32768)
#define OsEvent_BSW_KeyM                     ((EventMaskType)16384)
#define OsEvent_BSW_Mem_Process              ((EventMaskType)1)
#define OsEvent_CAN_DREE_DisSpdVal_KPH       ((EventMaskType)2)
#define OsEvent_CAN_DREE_EMS_02_10ms_1       ((EventMaskType)4)
#define OsEvent_CAN_DREE_HEV_EngOpSta        ((EventMaskType)8)
#define OsEvent_CAN_DREE_RhstaLvlSta         ((EventMaskType)1)
#define OsEvent_CAN_DRE_DisSpdVal_KPH        ((EventMaskType)2)
#define OsEvent_CAN_DRE_EMS_02_10ms_1        ((EventMaskType)4)
#define OsEvent_CAN_DRE_HEV_EngOpSta         ((EventMaskType)8)
#define OsEvent_CAN_DRE_PDC_FD_15_300ms      ((EventMaskType)16)
#define OsEvent_CAN_DRE_RhstaLvlSta          ((EventMaskType)1)
#define OsEvent_CAN_DRE_TP_IAU_C_WPC         ((EventMaskType)16)
#define OsEvent_SWC_BG                       ((EventMaskType)1)

/* Isr Handles */
#define Can_Interrupt_CANFD02_Cat2           ((ISRType)21)
#define Can_Interrupt_CANFD13_Cat2           ((ISRType)22)
#define Evtgen_Deepsleep_Isr_Vector_18_Cat2  ((ISRType)29)
#define GPT_Isr_Vector_303_Cat2              ((ISRType)26)
#define GPT_Isr_Vector_307_Cat2              ((ISRType)25)
#define Hsm_Isr_Vector_4_Cat2                ((ISRType)27)
#define Icu_Isr_Vector_27_Cat2               ((ISRType)23)
#define Icu_Isr_Vector_29_Cat2               ((ISRType)28)
#define Icu_Isr_Vector_40_Cat2               ((ISRType)24)
#define OsIsrOsCounter_0                     ((ISRType)32)
#define Scb_Isr_Vector_91_Cat2               ((ISRType)31)
#define Scb_Isr_Vector_94_Cat2               ((ISRType)30)

/* Resource Handles */
#define OsResource_BG                        ((ResourceType)2)
#define OsResource_FG1                       ((ResourceType)0)
#define OsResource_FG2                       ((ResourceType)1)

/* Task Handles */
#define OsTask_ASW_5ms                       ((TaskType)18)
#define OsTask_ASW_FG1_100ms                 ((TaskType)1)
#define OsTask_ASW_FG1_10ms                  ((TaskType)2)
#define OsTask_ASW_FG2_WdgMTestMode          ((TaskType)3)
#define OsTask_BSW_BG_Crypto_Main            ((TaskType)20)
#define OsTask_BSW_BG_Fota                   ((TaskType)14)
#define OsTask_BSW_BG_KeyM                   ((TaskType)19)
#define OsTask_BSW_ComMModeRequest           ((TaskType)4)
#define OsTask_BSW_FG1_100ms                 ((TaskType)6)
#define OsTask_BSW_FG1_10ms                  ((TaskType)5)
#define OsTask_BSW_FG1_5ms_Com               ((TaskType)7)
#define OsTask_BSW_FG1_IOManager             ((TaskType)11)
#define OsTask_BSW_FG2_IOManager             ((TaskType)12)
#define OsTask_BSW_FG2_WdgMAPI               ((TaskType)8)
#define OsTask_BSW_Init                      ((TaskType)9)
#define OsTask_BSW_Mem_Process               ((TaskType)10)
#define OsTask_BSW_RomTst                    ((TaskType)13)
#define OsTask_CAN_DREE_Process              ((TaskType)16)
#define OsTask_CAN_DRE_Process               ((TaskType)15)
#define OsTask_SWC_BG                        ((TaskType)17)

/* Core Macros */
#define OS_CORE_ID_0                         ((CoreIDType)0)

/* CounterFunction Macros */
#define OS_TICKS2MS_OsCounter_0(Value)       (((uint32)((Value) * 1250000 / 1000000)))
#define OS_TICKS2NS_OsCounter_0(Value)       (((uint32)((Value) * 1250000)))
#define OS_TICKS2SEC_OsCounter_0(Value)      (((uint32)((Value) * 1250000 / 1000000000)))
#define OS_TICKS2US_OsCounter_0(Value)       (((uint32)((Value) * 1250000 / 1000)))

/* CounterMaxAllVal Macros */
#define OSMAXALLOWEDVALUE_OsCounter_0        (4294967295)

/* CounterMinCycle Macros */
#define OSMINCYCLE_OsCounter_0               (1)

/* CounterTick Macros */
#define OSTICKSPERBASE_OsCounter_0           (1)

/* Resource Macros */
#define RES_SCHEDULER                        ((ResourceType)1)

/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/

/* Extern declarations for Isr */
extern void ISR_Can_Interrupt_CANFD02_Cat2(void);
extern void ISR_Can_Interrupt_CANFD13_Cat2(void);
extern void ISR_Icu_Isr_Vector_27_Cat2(void);
extern void ISR_Icu_Isr_Vector_40_Cat2(void);
extern void ISR_GPT_Isr_Vector_307_Cat2(void);
extern void ISR_GPT_Isr_Vector_303_Cat2(void);
extern void ISR_Hsm_Isr_Vector_4_Cat2(void);
extern void ISR_Icu_Isr_Vector_29_Cat2(void);
extern void ISR_Evtgen_Deepsleep_Isr_Vector_18_Cat2(void);
extern void ISR_Scb_Isr_Vector_94_Cat2(void);
extern void ISR_Scb_Isr_Vector_91_Cat2(void);
extern void ISR_OsCounter_0(void);

/* Extern declarations for Task */
extern void TASK_OsTask_ASW_FG1_100ms(void);
extern void TASK_OsTask_ASW_FG1_10ms(void);
extern void TASK_OsTask_ASW_FG2_WdgMTestMode(void);
extern void TASK_OsTask_BSW_ComMModeRequest(void);
extern void TASK_OsTask_BSW_FG1_10ms(void);
extern void TASK_OsTask_BSW_FG1_100ms(void);
extern void TASK_OsTask_BSW_FG1_5ms_Com(void);
extern void TASK_OsTask_BSW_FG2_WdgMAPI(void);
extern void TASK_OsTask_BSW_Init(void);
extern void TASK_OsTask_BSW_Mem_Process(void);
extern void TASK_OsTask_BSW_FG1_IOManager(void);
extern void TASK_OsTask_BSW_FG2_IOManager(void);
extern void TASK_OsTask_BSW_RomTst(void);
extern void TASK_OsTask_BSW_BG_Fota(void);
extern void TASK_OsTask_CAN_DRE_Process(void);
extern void TASK_OsTask_CAN_DREE_Process(void);
extern void TASK_OsTask_SWC_BG(void);
extern void TASK_OsTask_ASW_5ms(void);
extern void TASK_OsTask_BSW_BG_KeyM(void);
extern void TASK_OsTask_BSW_BG_Crypto_Main(void);


#endif /* OS_CFG_H */

/*******************************************************************************
**              PRE-JUSTIFICATION END (MISRA-C RULE CHECKER)                  **
*******************************************************************************/
/* polyspace:end<MISRA-C:1.1:Not a defect:Justify with annotations> Macro definitions are needed for performance and file size  */
/* polyspace:end<MISRA-C:8.9:Not a defect:Justify with annotations> This variable is defined in .lsl file. So external definition is not visible in Polyspace */
/* polyspace:end<MISRA-C:19.4:Not a defect:Justify with annotations> It does not affect system. Code is manually checked */
/* polyspace:end<MISRA-C:19.7:Not a defect:Justify with annotations> Macro is needed to improving performance */

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/

