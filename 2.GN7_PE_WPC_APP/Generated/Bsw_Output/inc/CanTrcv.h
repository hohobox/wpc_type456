
/*******************************************************************************
**  FILE-NAME: CanTrcv.h                                                      **
**                                                                            **
**  MODULE-NAME: AUTOSAR CAN Tranceiver Module                                **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **                                                                **
**                                                                            **
*******************************************************************************/

/*******************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 2.10.1                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/

/*
 * INPUT FILE:    Configuration\ECU\Ecud_CanTrcv.arxml
 *                Configuration\ECU\Mcal\Ecud_Dio.arxml
 * GENERATED ON: The time-stamp is removed
 */

#ifndef CANTRCV_H
#define CANTRCV_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/

/* CAN Transceiver Driver Config. header file */
#include "CanTrcv_Cfg.h"

#include "Can_GeneralTypes.h"
#if ((STD_ON == CANTRCV_ARISUCAN_SUPPORT) || (STD_ON == CANTRCV_PN_SUPPORTED)|| (STD_ON == CANTRCV_SPI_SUPPORT))
#include "Spi.h"
#endif
/*******************************************************************************
**                      Version Information                                   **
*******************************************************************************/

/* AUTOSAR SPECIFICATION VERSION INFORMATION */
#define CANTRCV_AR_RELEASE_MAJOR_VERSION                   (4)
#define CANTRCV_AR_RELEASE_MINOR_VERSION                   (0)
#define CANTRCV_AR_RELEASE_REVISION_VERSION                (3)
#define CANTRCV_SW_MAJOR_VERSION                           (2)
#define CANTRCV_SW_MINOR_VERSION                           (10)

/*******************************************************************************
**                      Global Symbols                                        **
*******************************************************************************/
#if(STD_ON == CANTRCV_ARISUCAN_SUPPORT)
typedef enum
{
  ARISUCAN_SBCMODE_NORMAL = 0,
  ARISUCAN_SBCMODE_SLEEP = 1,
  ARISUCAN_SBCMODE_STOP = 2,
  ARISUCAN_SBCMODE_INIT = 3,
  ARISUCAN_SBCMODE_RESTART = 4,
  ARISUCAN_SBCMODE_MAX = 5
} ArisuCan_SBCModeType;
#endif
/*******************************************************************************
**                      SERVICE IDs                                           **
*******************************************************************************/

/* Service ID for CanTrcv_SetOpMode */
#define CANTRCV_SETOPMODE_SID ((uint8)0x01)
/* Service ID for CanTrcv_GetOpMode */
#define CANTRCV_GETOPMODE_SID ((uint8)0x02)
/* Service ID for CanTrcv_GetOpMode */
#define CANTRCV_SPI_SID ((uint8)0x02)
/* Service ID for CanTrcv_MainFunction */
#define CANTRCV_MAINFUNCTION_SID ((uint8)0x06)
/* Service ID for CanTrcv_init */
#define CANTRCV_INIT_SID ((uint8)0x00)
/*Datatype*/
typedef void CanTrcv_ConfigType;

/*******************************************************************************
**                      DET ERROR CODES                                       **
*******************************************************************************/

/* API service called with wrong parameter */
#define CANTRCV_E_INVALID_TRANSCEIVER ((uint8)0x01)
/* API service called with null pointer as input parameter */
#define CANTRCV_E_PARAM_POINTER ((uint8)0x02)
/* API service used without initialization */
#define CANTRCV_E_UNINIT ((uint8)0x11)
/* API service called when transceiver is not in standby mode */
#define CANTRCV_E_TRCV_NOT_STANDBY ((uint8)0x21)
/* API service called when transceiver is not in normal mode */
#define CANTRCV_E_TRCV_NOT_NORMAL ((uint8)0x22)
/* API service called when No/incorrect communication to transceiver */
#define CANTRCV_E_NO_TRCV_CONTROL ((uint8)0x26)
/* API service called when Module initialization has failed */
#define CANTRCV_E_INIT_FAILED ((uint8)0x27)
#if(STD_ON == CANTRCV_SPI_SUPPORT)
#if((CANTRCV_TJA1145_PRESENT == STD_ON) ||(CANTRCV_TCAN1145_PRESENT == STD_ON))
/* API service called when transceiver is in undervoltage */
#define CANTRCV_E_TRCV_UNDERVOLTAGE ((uint8)0x28)
#endif
/* API service called when Module SPI Communication has failed */
#define CANTRCV_E_SPI_FAILED ((uint8)0x50)
#endif

/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/


#define CANTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void,CANTRCV_CODE)CANTRCV_INIT_MACRO
(P2CONST(void, AUTOMATIC, CANTRCV_CONST)ConfigPtr);
#define CANTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define CANTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, CANTRCV_CODE)CANTRCV_SETOPMODE_MACRO
  (uint8 Transceiver, CanTrcv_TrcvModeType OpMode);
#define CANTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define CANTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, CANTRCV_CODE)CANTRCV_GETOPMODE_MACRO
  (uint8 Transceiver, P2VAR(CanTrcv_TrcvModeType, AUTOMATIC,
  CANTRCV_APPL_DATA)OpMode);
#define CANTRCV_STOP_SEC_CODE
#include "MemMap.h"


#endif  /* CANTRCV_H */

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
