<?xml version='1.0'?>
<datamodel version="5.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/12/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/12/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T40D13M1I0R0" type="AR-PACKAGE">
        <a:a name="UUID" value="04696AB1-FD37-4d2d-9064-09ED70CC1434"/>
        <d:lst type="ELEMENTS">
          <d:chc name="Fls" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.2</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2014-10-31</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>EN: Configuration of the Fls (internal or external flash driver) module.
                  Its multiplicity describes the number of flash drivers present, so there will be one container for each flash driver in the ECUC template. When no flash driver is present then the multiplicity is 0.</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
              <a:a name="RELEASE" value="asc:4.2.2"/>
              <a:a name="UPPER-MULTIPLICITY" value="*"/>
              <a:a name="UUID" value="00b32258-01e6-4e32-b2ff-646dba416905"/>
              <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Fls"/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="ec44c33f-3c4a-4408-9a78-5368d18b0016"/>
                <a:da name="DEFAULT" value="VariantPostBuild"/>
                <a:da name="RANGE">
                  <a:v>VariantPostBuild</a:v>
                  <a:v>VariantPreCompile</a:v>
                </a:da>
              </v:var>
              <v:lst name="FlsConfigSet" type="MAP">
                <a:da name="MAX" value="65534"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="FlsConfigSet" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: Container for runtime configuration parameters of the flash driver.

                      Implementation Type: Fls_ConfigType.</a:v>
                  </a:a>
                  <a:a name="UUID" value="f5b080a8-f94a-43bb-8cca-35665d3c4c93"/>
                  <v:var name="FlsAcErase" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: Address offset in RAM to which the erase flash access code shall be loaded. Used as function pointer to access the erase flash access code."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="09ce1029-a6f8-41c1-aa0c-466b2502275b"/>
                    <a:da name="ENABLE" value="true"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=0"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsAcWrite" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: Address offset in RAM to which the write flash access code shall be loaded. Used as function pointer to access the write flash access code."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="626c7518-b9c9-4249-8847-fc9fbf0b18e1"/>
                    <a:da name="ENABLE" value="true"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=0"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsCallCycle" type="FLOAT">
                    <a:a name="DESC" 
                         value="EN: Cycle time of calls of the flash driver&apos;s main function. This value is given in seconds."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="1c7e84d2-2bd6-4a92-b43e-2d36366d444d"/>
                    <a:da name="DEFAULT" value="0.01"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=1.0"/>
                      <a:tst expr="&gt;=0.0"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsDefaultMode" type="ENUMERATION">
                    <a:a name="DESC" 
                         value="EN: This parameter is the default FLS device mode after initialization. Implementation Type: MemIf_ModeType."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="941954d3-4e72-453e-82af-153e464f421a"/>
                    <a:da name="DEFAULT" value="MEMIF_MODE_SLOW"/>
                    <a:da name="RANGE">
                      <a:v>MEMIF_MODE_FAST</a:v>
                      <a:v>MEMIF_MODE_SLOW</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="FlsJobEndNotification" type="FUNCTION-NAME">
                    <a:a name="DESC" 
                         value="EN: Mapped to the job end notification routine provided by some upper layer module, typically the Fee module."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="56a83681-e017-4849-9d62-f04d7b856f5c"/>
                    <a:da name="DEFAULT" value="Fee_JobEndNotification"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsJobEndNotification. Must be valid C function name."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsJobErrorNotification" type="FUNCTION-NAME">
                    <a:a name="DESC" 
                         value="EN: Mapped to the job error notification routine provided by some upper layer module, typically the Fee module."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9aff7cc1-f6fa-4969-b70e-5d6dd2ad1a8f"/>
                    <a:da name="DEFAULT" value="Fee_JobErrorNotification"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsJobErrorNotification. Must be valid C function name."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsMaxReadFastMode" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in fast mode."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="061971a9-1f03-4d7e-badf-a6124f3ceb93"/>
                    <a:da name="DEFAULT" value="1024"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. mod 4) = 0 and . &gt;= 4 and . &lt;= 4294967292" 
                          false="Value must be multiple of 4 and not be larger than 4294967292."/>
                  </v:var>
                  <v:var name="FlsMaxReadNormalMode" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in normal mode."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="24f8f817-9e19-40b7-9f88-a99a060c98b2"/>
                    <a:da name="DEFAULT" value="128"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. mod 4) = 0 and . &gt;= 4 and . &lt;= 4294967292" 
                          false="Value must be multiple of 4 and not be larger than 4294967292."/>
                  </v:var>
                  <v:var name="FlsMaxWriteFastMode" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in fast mode."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="a849063d-c281-460b-be54-e0cf29f0fc4d"/>
                    <a:da name="DEFAULT" value="64"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. mod 4) = 0 and . &gt;= 4 and . &lt;= 4294967292" 
                          false="Value must be multiple of 4 and not be larger than 4294967292."/>
                  </v:var>
                  <v:var name="FlsMaxWriteNormalMode" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in normal mode."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="b3021117-fc68-4167-a8f1-b1ea746b25ba"/>
                    <a:da name="DEFAULT" value="16"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. mod 4) = 0 and . &gt;= 4 and . &lt;= 4294967292" 
                          false="Value must be multiple of 4 and not be larger than 4294967292."/>
                  </v:var>
                  <v:var name="FlsProtection" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: Erase/write protection settings. Only relevant if supported by hardware."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="bced7747-314a-4057-aea4-c9285cec9390"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=0"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsNumberOfDelayLoop" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: Number of delay (wait) loop for writing a flash block"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Cypress"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="061971a9-1f03-4d7e-badf-a6124f3ceb97"/>
                    <a:da name="DEFAULT" value="2000"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsDedErrorNotification" type="FUNCTION-NAME">
                    <a:a name="DESC" 
                         value="EN: Mapped to the DED error notification routine provided by some upper layer module, typically the Fee module."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Cypress"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="56a83681-e017-4849-9d63-f04d7b856f5d"/>
                    <a:da name="DEFAULT" value="Fee_DedErrorNotification"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsDedErrorNotification. Must be valid C function name."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsSedErrorNotification" type="FUNCTION-NAME">
                    <a:a name="DESC" 
                         value="EN: Mapped to the SED error notification routine provided by some upper layer module, typically the Fee module."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Cypress"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9aff7cc1-f6fa-4969-b70f-5d6dd2ad1a90"/>
                    <a:da name="DEFAULT" value="Fee_SedErrorNotification"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsSedErrorNotification. Must be valid C function name."/>
                    </a:da>
                  </v:var>
                  <v:ctr name="FlsDemEventParameterRefs" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: Container for the references to DemEventParameter elements which shall be invoked using the Dem_ReportErrorStatus API in case the corresponding error occurs. The EventId is taken from the referenced DemEventParameter&apos;s DemEventId value. The standardized errors are provided in the container and can be extended by vendor specific error references."/>
                    <a:a name="EXISTING" value="false"/>
                    <a:a name="UUID" 
                         value="a813a790-51a9-42bd-80f3-5917ba1b7b23"/>
                    <v:ref name="FLS_E_COMPARE_FAILED" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Flash compare failed (HW)&quot; has occurred."/>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="e6258104-6c29-4a21-b009-76250ac96abe"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="FLS_E_ERASE_FAILED" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Flash erase failed (HW)&quot; has occurred."/>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="a53ee1b9-8899-4298-a1c9-351cc7d783ce"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="FLS_E_READ_FAILED" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Flash read failed (HW)&quot; has occurred."/>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="6164b915-c004-4008-a204-e22998e37048"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="FLS_E_WRITE_FAILED" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Flash write failed (HW)&quot; has occurred."/>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="3485372e-3c7c-4ec2-8990-e52a17a37e6f"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="FLS_E_UNEXPECTED_FLASH_ID" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Expected hardware ID not matched&quot; has occurred."/>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="ee613579-abdd-401b-baa6-d9a290778f14"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                  </v:ctr>
                  <v:ctr name="FlsExternalDriver" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: This container is present for external Flash drivers only. Internal Flash drivers do not use the parameter listed in this container, hence its multiplicity is 0 for internal drivers."/>
                    <a:a name="EXISTING" value="false"/>
                    <a:a name="UUID" 
                         value="0d7a036c-f03e-403c-860c-9c6b81d8cc72"/>
                    <v:ref name="FlsSpiReference" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to SPI sequence (required for external Flash drivers)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="UUID" 
                           value="200d19e8-a79c-4c49-979f-74435aa86668"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver/SpiSequence"/>
                    </v:ref>
                  </v:ctr>
                  <v:ctr name="FlsSectorList" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: List of flashable sectors and pages."/>
                    <a:a name="UUID" 
                         value="6d55bf20-8b98-4152-912f-12034f1a06d1"/>
                    <v:lst name="FlsSector" type="MAP">
                      <a:a name="COLUMNS">
                        <a:v>FlsSectorIdentifier</a:v>
                        <a:v>FlsSectorStartaddress</a:v>
                        <a:v>FlsSectorSize</a:v>
                        <a:v>FlsNumberOfSectors</a:v>
                        <a:v>FlsPageSize</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Fls Sector List"/>
                      <a:da name="MAX" type="XPath" 
                            expr="count(ecu:list(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.instances&apos;)) + count(ecu:list(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.instances&apos;))"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="FlsSector" type="IDENTIFIABLE">
                        <a:a name="DESC" 
                             value="EN: Configuration description of a flashable sector"/>
                        <a:a name="NAME_PATTERN" value="Sector_?"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="05e45705-61fc-4146-b6c4-9988d1fd73b9"/>
                        <v:var name="FlsSectorIdentifier" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>EN: Unique identifier of the sector. This entry will be used for automatic calculation and checking of all other sector parameter.
                              Implementation Type: None.</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" 
                               value="Cypress"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="f49bc7f3-7a67-4d72-961a-30d15a602fa9"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="node:when(node:current()/../@index = 0, concat(&apos;WFLASH_LG_SBM_SECTOR_&apos;,string(0)), 
                                      node:when(num:i(../../*[position() = (node:current()/../@index)]/FlsSectorStartaddress + ../../*[position() = (node:current()/../@index)]/FlsSectorSize * ../../*[position() = (node:current()/../@index)]/FlsNumberOfSectors)
                                         &lt; num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;)),
                                      concat(&apos;WFLASH_LG_SBM_SECTOR_&apos;,string(num:i(../../*[position() = (node:current()/../@index)]/FlsSectorStartaddress + ../../*[position() = (node:current()/../@index)]/FlsSectorSize * ../../*[position() = (node:current()/../@index)]/FlsNumberOfSectors)
                                         div num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.SIZE&apos;)))),
                                      concat(&apos;WFLASH_SM_SBM_SECTOR_&apos;,string((num:i(../../*[position() = (node:current()/../@index)]/FlsSectorStartaddress + ../../*[position() = (node:current()/../@index)]/FlsSectorSize * ../../*[position() = (node:current()/../@index)]/FlsNumberOfSectors)
                                         - num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;))) div num:hextoint(ecu:get(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.SIZE&apos;))))))"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="text:uniq(../../*/FlsSectorIdentifier,.)" 
                                   false="Same FlsSectorIdentifier more than once given in the configuration."/>
                            <a:tst expr="contains(., &apos;WFLASH_LG_SBM_SECTOR_&apos;) or contains(., &apos;WFLASH_SM_SBM_SECTOR_&apos;)" 
                                   false="The parameter FlsSectorIdentifier has wrong value."/>
                          </a:da>
                        </v:var>
                        <v:var name="FlsNumberOfSectors" type="INTEGER">
                          <a:a name="DESC" 
                               value="EN: Number of continuous sectors with identical values for FlsSectorSize and FlsPageSize. The parameter FlsSectorStartAddress denotes the start address of the first sector."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="c4d8debc-1565-4969-a2c9-ae433260c116"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="node:when(contains(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;),
                                      num:i(count(ecu:list(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.instances&apos;)) - substring-after(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;)),
                                      num:i(count(ecu:list(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.instances&apos;)) - substring-after(../FlsSectorIdentifier, &apos;WFLASH_SM_SBM_SECTOR_&apos;)))"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=node:when(contains(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;),
                                              num:i(count(ecu:list(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.instances&apos;)) - substring-after(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;)),
                                              num:i(count(ecu:list(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.instances&apos;)) - substring-after(../FlsSectorIdentifier, &apos;WFLASH_SM_SBM_SECTOR_&apos;)))"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="FlsPageSize" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>EN: Size of one page of this sector. Implementation Type: Fls_LengthType.</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="0d0afdae-a99b-44e6-b01a-79ff584c4ab7"/>
                          <a:da name="DEFAULT" value="4"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4"/>
                            <a:tst expr="&gt;=4"/>
                          </a:da>
                        </v:var>
                        <v:var name="FlsSectorSize" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>EN: Size of this sector. Implementation Type: Fls_LengthType.</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="eff07405-bff6-490f-a202-bd73087b8058"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:hextoint(node:when(contains(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;),
                                      ecu:get(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.SIZE&apos;),ecu:get(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.SIZE&apos;)))"/>
                          <a:da name="INVALID" type="XPath" 
                                expr=". != num:hextoint(node:when(contains(../FlsSectorIdentifier, &apos;WFLASH_LG_SBM_SECTOR_&apos;),
                                           ecu:get(&apos;MEMORY.WFLASH_LG_SBM.SECTOR.SIZE&apos;),ecu:get(&apos;MEMORY.WFLASH_SM_SBM.SECTOR.SIZE&apos;)))" 
                                true="Value needs to be match the selected FlsSectorIdentifier infos. Press calc button."/>
                        </v:var>
                        <v:var name="FlsSectorStartaddress" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>EN: Start address of this sector. Implementation Type: Fls_AddressType.</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="f170c58f-4e5c-4010-ac02-d1ef8fe84727"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(node:when(node:current()/../@index = 0, 0, ../../*[position() = (node:current()/../@index)]/FlsSectorStartaddress + ../../*[position() = (node:current()/../@index)]/FlsSectorSize * ../../*[position() = (node:current()/../@index)]/FlsNumberOfSectors))"/>
                          <a:da name="INVALID" type="XPath">
                                <a:tst expr=". != num:i(node:when(node:current()/../@index = 0, 0, ../../*[position() = (node:current()/../@index)]/FlsSectorStartaddress + ../../*[position() = (node:current()/../@index)]/FlsSectorSize * ../../*[position() = (node:current()/../@index)]/FlsNumberOfSectors))" 
                                       true="Value needs to be match a virtual address (address offset) of this sector. Press calc button."/>
                                <a:tst expr=". &gt;= num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;)) + num:hextoint(ecu:get(&apos;MEMORY.WFLASH_SM_SBM.size&apos;))" 
                                       true="Start address is out of range."/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:ctr name="FlsGeneral" type="IDENTIFIABLE">
                <a:a name="DESC" 
                     value="EN: Container for general parameters of the flash driver. These parameters are always pre-compile."/>
                <a:a name="UUID" value="31787eb4-0504-44cb-ae20-09f32c9f9060"/>
                <v:var name="FlsAcLoadOnJobStart" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: The flash driver shall load the flash access code to RAM whenever an erase or write job is started and unload (overwrite) it after that job has been finished or canceled.

                      true: Flash access code loaded on job start / unloaded on job end
                      or error.
                      false:  Flash access code not loaded to / unloaded from RAM at all.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="0b5c2bed-188e-4ab3-9137-00cad6745161"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" expr=". = &apos;false&apos;" 
                        false="Flash access code is never loaded to RAM. Set to false."/>
                </v:var>
                <v:var name="FlsBaseAddress" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: The flash memory start address (see also SWS_Fls_00208 and SWS_Fls_00209). This parameter defines the lower boundary for read / write / erase / compare and blank check jobs.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="93afa71f-156c-440a-b0e4-2cf1385d075b"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsBlankCheckApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_BlankCheck function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b896-5048fcece634"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsCancelApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_Cancel function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="52bb600b-030c-4e47-90c1-bb3cc2b5d7e2"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsCompareApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_Compare function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="39785812-80b2-4cc6-ba7a-0e5663a67d2a"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Switches the Default Error Tracer (Det) detection and notification ON or OFF.

                      true: enabled (ON).
                      false: disabled (OFF).</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d474173d-d661-47bb-a77f-9ecb848b17c1"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDriverIndex" type="INTEGER">
                  <a:a name="DESC" 
                       value="EN: Index of the driver, used by Fee(Flash EEPROM Emulation)."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="ECU"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                  <a:a name="UUID" value="ccb7c9ad-2e80-4566-b18c-7b1e82889c07"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=254"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsGetJobResultApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_GetJobResult function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="aa6d9999-64f1-4621-a213-877791a19a28"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsGetStatusApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_GetStatus function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2e46a445-99e7-4772-ba6f-7702ed8e6ff8"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsRuntimeErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Switches the runtime errors detection and notification ON or OFF.

                      true: enabled (ON).
                      false: disabled (OFF).</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="35f9446c-d822-4245-875c-c77157f22410"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsSetModeApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_SetMode function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b897-5048fcece633"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsTotalSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: The total amount of flash memory in bytes (see also SWS_Fls_00208 and SWS_Fls_00209).
                      This parameter in conjunction with FLS_BASE_ADDRESS defines the upper boundary for read / write / erase / compare and blank check jobs.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="98f52532-3281-419c-b4a8-ed30d41ee87a"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="num:i(num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;)) + num:hextoint(ecu:get(&apos;MEMORY.WFLASH_SM_SBM.size&apos;)))"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="num:i(num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;)) + num:hextoint(ecu:get(&apos;MEMORY.WFLASH_SM_SBM.size&apos;))) = 0" 
                           true="No flash sectors are available in this derivate."/>
                    <a:tst expr=". != num:i(num:hextoint(ecu:get(&apos;MEMORY.WFLASH_LG_SBM.size&apos;)) + num:hextoint(ecu:get(&apos;MEMORY.WFLASH_SM_SBM.size&apos;)))" 
                           true="Physical size of flash memory does not match selected derivate. Press calc button."/>
                  </a:da>
                </v:var>
                <v:var name="FlsUseInterrupts" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Job processing triggered by hardware interrupt (only available if supported by underlying flash hardware).

                      true: Job processing triggered by interrupt (hardware controlled).
                      false:  Job processing not triggered by interrupt (software controlled).</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="77672161-9781-4cc6-8b63-6784de397709"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsUseNonBlockingWrite) = 'false'"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="text:tolower(../FlsUseNonBlockingWrite) = 'false' or . = 'false'" false="the FlsUseInterrupts must be false when FlsUseNonBlockingWrite is true."/>
                  </a:da>
                </v:var>
                <v:var name="FlsVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Pre-processor switch to enable / disable the API to read out the modules version information.

                      true: Version info API enabled.
                      false:  Version info API disabled.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="35f9446c-d822-4245-875d-c77157f22407"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsErrorCalloutFunction" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>EN: &lt;html&gt;Error callout function. Syntax:&lt;br/&gt; void ErrorCalloutHandler (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)&lt;br/&gt; &lt;br/&gt; The error callout function is called on every error. The ASIL level of this function limits the ASIL level of the Fls driver.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="35f9446c-d822-4245-875d-c77157f22411"/>
                  <a:da name="DEFAULT" value="ErrorCalloutHandler"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsErrorCalloutFunction. Must be valid C function name."/>
                  </a:da>
                </v:var>
                <v:lst name="FlsIncludeFile">
                  <v:var name="FlsIncludeFile" type="STRING">
                    <a:a name="DESC" value="EN: A file that shall be included by Fls_Cfg.h. Any application specific symbol that is used by the Fls configuration (e.g. Error callout function) should be included by configuring this parameter."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Cypress"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="35f9446c-d822-4245-875d-c77157f22415"/>
                    <a:da name="DEFAULT" value="ErrorCalloutHandler.h"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_0-9a-zA-Z]+\.h$')" false="Invalid name of the FlsIncludeFile. Must be a filename with extension .h."/>
                      <a:tst expr="text:uniq(../*, .)"  false="FlsIncludeFile must be unique."/>
                    </a:da>
                  </v:var>
                </v:lst>
                <v:var name="FlsEraseVerification" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Pre-processor switch to enable / disable the erase verification (blank check) after a flash block has been erased.

                      true: The verification enabled.
                      false:  The verification disabled.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="52bb600c-030d-4e47-90c1-bb3cc2b5d7e3"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsBeforeWriteVerification" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Pre-processor switch to enable / disable the verification (blank check) before writing a flash block.

                      true: The verification enabled.
                      false:  The verification disabled.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="52bb600d-030e-4e47-90c1-bb3cc2b5d7e4"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsWriteVerification" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Pre-processor switch to enable / disable the write verification (compare) after writing a flash block.

                      true: The verification enabled.
                      false:  The verification disabled.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="52bb600e-030f-4e47-90c1-bb3cc2b5d7e5"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsEraseCalloutFunction" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>EN: &lt;html&gt;Erase callout function. Syntax:&lt;br/&gt; void EraseCalloutHandler (Fls_AddressType TargetAddress)&lt;br/&gt; &lt;br/&gt; The erase callout function is called after an erase request is accepted.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="35f9446c-d822-4245-875d-c77157f22412"/>
                  <a:da name="DEFAULT" value="EraseCalloutHandler"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsEraseCalloutFunction. Must be valid C function name."/>
                  </a:da>
                </v:var>
                <v:var name="FlsReadImmediateApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_ReadImmediate function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b894-5048fcece636"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsSuspendResumeApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_Suspend / Fls_Resume function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b893-5048fcece637"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsSetCycleModeApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable the Fls_SetCycleMode function.

                      true: API supported / function provided.
                      false:  API not supported / function not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b900-5048fcece662"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsDmaChannel" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: DMA channel (No.) for reading from work flash.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b876-5048fcece657"/>
                  <a:da name="ENABLE" type="XPath" expr="text:tolower(../FlsUseDmaForRead) = 'true'"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsUseDmaForRead) = 'true'"/>
                  <a:da name="DEFAULT" type="XPath" expr="num:i(0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=num:i(ecu:get(&apos;CPUSS.DMAC.CH_NR&apos;) - 1)"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAuxiliaryBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: The size of auxiliary buffer that stores data which is read from work flash by DMA transfer at a time on verifying, comparing or immediate reading process.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b875-5048fcece658"/>
                  <a:da name="ENABLE" type="XPath" expr="text:tolower(../FlsUseDmaForRead) = 'true'"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsUseDmaForRead) = 'true'"/>
                  <a:da name="DEFAULT" value="128"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. mod 4) = 0 and . &gt;= 4 and . &lt;= 2048" 
                        false="Value must be multiple of 4 and not be larger than 2048."/>
                </v:var>
                <v:var name="FlsSetFlashCtlRegister" type="ENUMERATION">
                  <a:a name="DESC" 
                       value="EN: This parameter is used for selecting which bit fields of FLASH_CTL register are set by the flash driver."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b886-5048fcece644"/>
                  <a:da name="DEFAULT" value="FLS_FLASH_CTL_WORKONLY"/>
                  <a:da name="RANGE">
                    <a:v>FLS_FLASH_CTL_WORKONLY</a:v>
                    <a:v>FLS_FLASH_CTL_USERVALUE</a:v>
                    <a:v>FLS_FLASH_CTL_NOTSET</a:v>
                  </a:da>
                </v:var>
                <v:var name="FlsUserValueForFlashCtlRegister" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: A value for FLASH_CTL register that is set by user when FlsSetFlashCtlRegister is FLS_FLASH_CTL_USERVALUE.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b885-5048fcece645"/>
                  <a:da name="ENABLE" type="XPath" expr="../FlsSetFlashCtlRegister = 'FLS_FLASH_CTL_USERVALUE'"/>
                  <a:da name="DEFAULT" value="22085632"/>
                </v:var>
                <v:var name="FlsSetWorkFlashSafetyRegister" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether WORK_FLASH_SAFETY register is set by the flash driver.

                      true: flash driver sets the WORK_FLASH_SAFETY register.
                      false:  flash driver does not set the WORK_FLASH_SAFETY register.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b880-5048fcece647"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsSetWorkFlashFaultMaskRegister" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether FAULT_STRUCT_MASK register regarding work flash is set by the flash driver.

                      true: flash driver sets the FAULT_STRUCT_MASK register regarding work flash.
                      false:  flash driver does not set the FAULT_STRUCT_MASK register regarding work flash.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b901-5048fcece663"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDefineWdgClear" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether the function Fls_WdgClear (empty function) to clear the watchdog timer is defined by the flash driver.

                      true: flash driver defines the function Fls_WdgClear.
                      false:  flash driver does not define the function Fls_WdgClear.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b877-5048fcece655"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsUseNonBlockingWrite" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether writing to work flash is performed with non-blocking mode by the flash driver.

                      true: flash driver performs writing with non-blocking mode.
                      false:  flash driver performs writing with blocking mode.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b898-5048fcece660"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsUseDmaForRead" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether reading from work flash is performed by DMA transfer.

                      true: flash driver performs reading with DMA transfer.
                      false:  flash driver performs reading without DMA transfer (with CPU transfer).</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b899-5048fcece661"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsReportErrorIfNotBlank" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter is used for selecting whether error callout functions are called when a blank check job detects non-blank.

                      true: flash driver calls the error callout functions when a blank check job detects non-blank.
                      false:  flash driver does not call the error callout functions when a blank check job detects non-blank.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b902-5048fcece664"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsUseSafetyMechanism" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: Compile switch to enable and disable eCT Flash safety mechanism for write / erase.

                      true: eCT Flash safety mechanism is provided.
                      false:  eCT Flash safety mechanism is not provided.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b890-5048fcece640"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsHsmPresent" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: This parameter indicates whether the HSM (Hardware Security Module) is present.

                      true: HSM is present.
                      false:  HSM is not present.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b892-5048fcece638"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsIpcStructure" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: IPC structure (No.) used for eCT Flash safety mechanism.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b889-5048fcece641"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsHsmPresent) = 'true' or text:tolower(../FlsUseSafetyMechanism) = 'true'"/>
                  <a:da name="DEFAULT" type="XPath" expr="num:i(ecu:get(&apos;CPUSS.IPC.IPC_NR&apos;) - 1)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=num:i(ecu:get(&apos;CPUSS.IPC.IPC_NR&apos;) - 1)"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsIpcInterruptStructure" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: IPC interrupt structure (No.) used for eCT Flash safety mechanism.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b888-5048fcece642"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsHsmPresent) = 'true' or text:tolower(../FlsUseSafetyMechanism) = 'true'"/>
                  <a:da name="DEFAULT" type="XPath" expr="num:i(ecu:get(&apos;CPUSS.IPC.IPC_IRQ_NR&apos;) - 1)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=num:i(ecu:get(&apos;CPUSS.IPC.IPC_IRQ_NR&apos;) - 1)"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsWorkEmbeddedNotification" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>EN: &lt;html&gt;Work flash embedded notification routine. Syntax:&lt;br/&gt; void WorkEmbeddedNotification (void)&lt;br/&gt; &lt;br/&gt; The notification routine is called after flash embedded (program or erase) operation.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b887-5048fcece643"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsUseSafetyMechanism) = 'true'"/>
                  <a:da name="DEFAULT" value="WorkEmbeddedNotification"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="text:tolower(../FlsUseSafetyMechanism) = 'false' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsWorkEmbeddedNotification. Must be valid C function name."/>
                  </a:da>
                </v:var>
                <v:var name="FlsArbitrationTimeout" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>EN: Tolerant Time for arbitration in (waiting for) finish of flash operation that was started from another core, typically maximum time for erase of one flash sector. This value is given in seconds.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b882-5048fcece648"/>
                  <a:da name="EDITABLE" type="XPath" expr="text:tolower(../FlsUseSafetyMechanism) = 'true'"/>
                  <a:da name="DEFAULT" value="0.2"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=60.0"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsSystemcallCalloutFunction" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>EN: &lt;html&gt;Callout function for invocation of system-call in upper layer. Syntax:&lt;br/&gt; Std_ReturnType SystemcallCalloutFunction (uint32 *Fls_IpcContext)&lt;br/&gt; &lt;br/&gt; The callout function is called whenever the flash driver calls the system-call.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b874-5048fcece659"/>
                  <a:da name="DEFAULT" value="SystemcallCalloutFunction"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the FlsSystemcallCalloutFunction. Must be valid C function name."/>
                  </a:da>
                </v:var>
                <v:var name="FlsFaultStructure" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: Fault structure (No.) used for reporting.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Cypress"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f726e922-5459-4197-b895-5048fcece656"/>
                  <a:da name="DEFAULT" type="XPath" expr="num:i(0)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=num:i(ecu:get(&apos;CPUSS.FAULT.FAULT_NR&apos;) - 1)"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="FlsPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN: Additional published parameters not covered by CommonPublishedInformation container.
                    Note that these parameters do not have any configuration class setting, since they are published information.</a:v>
                </a:a>
                <a:a name="UUID" value="a67de016-9b81-4a83-a30a-d55e8fd0c0ec"/>
                <v:var name="FlsAcLocationErase" type="INTEGER">
                  <a:a name="DESC">
                       <a:v>EN: &lt;html&gt;
                            Position in RAM, to which the erase flash access code has to be loaded. Only relevant
                            if the erase flash access code is not position independent. If this information is not provided
                            it is assumed that the erase flash access code is position independent and that therefore the RAM position can be freely configured.
                            &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="6bee7e04-2eeb-41d3-b7d1-17ea352fda1d"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcLocationWrite" type="INTEGER">
                  <a:a name="DESC">
                       <a:v>EN: &lt;html&gt;
                            Position in RAM, to which the write flash access code has to be loaded. Only relevant
                            if the write flash access code is not position independent. If this information is not provided
                            it is assumed that the write flash access code is position independent and that therefore the RAM position can be freely configured.
                            &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4e602334-2aa9-4630-a8de-133e5a04518e"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcSizeErase" type="INTEGER">
                  <a:a name="DESC" 
                       value="EN: Number of bytes in RAM needed for the erase flash access code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="0d503bcd-936b-45ec-8262-8a79687d8f8a"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcSizeWrite" type="INTEGER">
                  <a:a name="DESC" 
                       value="EN: Number of bytes in RAM needed for the write flash access code."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="33da64a3-d241-4803-8485-fc62184d34a4"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsEraseTime" type="FLOAT">
                  <a:a name="DESC" 
                       value="EN: Maximum time to erase one complete flash sector in seconds (in all supported derivatives)."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="47363e64-caae-4122-8322-77fcc251ddf1"/>
                  <a:da name="DEFAULT" value="0.16"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0.16"/>
                    <a:tst expr="&gt;=0.16"/>
                  </a:da>
                </v:var>
                <v:var name="FlsErasedValue" type="INTEGER">
                  <a:a name="DESC" 
                       value="EN: The contents of an erased flash memory cell."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d0913427-1487-4105-b36c-1cb95d263ebe"/>
                  <a:da name="DEFAULT" value="4294967295"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=4294967295"/>
                    <a:tst expr="&gt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="FlsExpectedHwId" type="STRING">
                  <a:a name="DESC">
                       <a:v>EN: &lt;html&gt;
                            Unique identifier of the hardware device that is expected by this driver
                            (the device for which this driver has been implemented). Only relevant for external flash drivers.
                            &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="514f0c98-8e46-43ef-8098-605d66d7e7c7"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="DEFAULT" value="Traveo"/>
                </v:var>
                <v:var name="FlsSpecifiedEraseCycles" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: &lt;html&gt;
                      Number of erase cycles specified for the flash device (usually given in the device data sheet).
                      If the number of specified erase cycles depends on the operating environment (temperature, voltage, ...) during reprogramming of the flash device, the minimum number for which a data retention of at least 15 years over the temperature range from -40C .. +125C can be guaranteed shall be given.
                      Note: If there are different numbers of specified erase cycles for different flash sectors of the device this parameter has to be extended to a parameter list (similar to the sector list above).
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e9a47b05-0564-4922-8359-ac8c89b119c5"/>
                  <a:da name="DEFAULT" value="250000"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=250000"/>
                    <a:tst expr="&gt;=250000"/>
                  </a:da>
                </v:var>
                <v:var name="FlsWriteTime" type="FLOAT">
                  <a:a name="DESC" 
                       value="EN: Maximum time to program one complete flash page in seconds."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="42dda6a9-0eaa-4ecf-a9cc-1f7dae7ce5b6"/>
                  <a:da name="DEFAULT" value="0.001"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0.001"/>
                    <a:tst expr="&gt;=0.001"/>
                  </a:da>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
          <d:chc name="FLS_EcuParameterDefinition" type="AR-ELEMENT" 
                 value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <a:a name="UUID" value="81554a5a-d0d0-42cb-afc9-9a3f9a3a39ed"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D13M1I0R0/Fls"/>
              </d:lst>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
