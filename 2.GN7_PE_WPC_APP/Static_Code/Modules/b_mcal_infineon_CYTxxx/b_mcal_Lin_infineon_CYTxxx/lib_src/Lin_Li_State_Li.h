/** \brief Lin_Li_State_Li.h
 **
 ** Library internal state interface.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

#ifndef LIN_LI_STATE_LI_H_INCLUDED
#define LIN_LI_STATE_LI_H_INCLUDED

/*==================[inclusions]============================================*/
#include <Std_Types.h>

#include "Lin_LIf_State_Ncp.h"


/*==================[macros]================================================*/

#define LIN_REG_CTL0_DISABLE_CH      ((uint32)0x00000001UL)
#define LIN_REG_CTL0_TXWAKE_SET      ((uint32)0x80040101UL)
#define LIN_REG_INTR_CLEAR           ((uint32)0xFFFFFFFFUL)
#define LIN_REG_INTR_MASK_CLEAR      ((uint32)0x00000000UL)

#define LIN_REG_TX_RX_STATUS_SET     ((uint32)0x04000000UL)
#define LIN_REG_INTR_MASK_RXWAKE_SET ((uint32)0x00000400UL)
#define LIN_REG_INTR_MASK_TXCOMP_SET ((uint32)0x00030002UL)
#define LIN_REG_CMD_TX_HEAD_SET      ((uint32)0x00000001UL)
#define LIN_REG_CMD_TX_RES_SET       ((uint32)0x00000002UL)
#define LIN_REG_CMD_TX_WAKE_SET      ((uint32)0x00000004UL)
#define LIN_REG_CMD_RX_RES_SET       ((uint32)0x00000200UL)

#define LIN_REG_CTL1_CSUM_CLASSIC_SET   ((uint32)0x00000000UL)
#define LIN_REG_CTL1_CSUM_ENHANCED_SET  ((uint32)0x00000100UL)

#define LIN_REG_CTL0_INIT            ((uint32)0x80000001UL)
#define LIN_REG_CTL1_INIT            ((uint32)0x00000100UL)
#define LIN_REG_CMD_INIT             ((uint32)0x00000000UL)
#define LIN_REG_TX_RX_STATUS_INIT    ((uint32)0x04000000UL)
#define LIN_REG_PID_CHECKSUM_INIT    ((uint32)0x00000000UL)
#define LIN_REG_DATA0_INIT           ((uint32)0x00000000UL)
#define LIN_REG_DATA1_INIT           ((uint32)0x00000000UL)
#define LIN_REG_INTR_MASK_INIT       ((uint32)0x00000000UL)

#define LIN_REG_CTL0_DEINIT            ((uint32)0x400C0101UL)
#define LIN_REG_CTL1_DEINIT            ((uint32)0x00000100UL)
#define LIN_REG_CMD_DEINIT             ((uint32)0x00000000UL)
#define LIN_REG_PID_CHECKSUM_DEINIT    ((uint32)0x00000000UL)
#define LIN_REG_DATA0_DEINIT           ((uint32)0x00000000UL)
#define LIN_REG_DATA1_DEINIT           ((uint32)0x00000000UL)
#define LIN_REG_INTR_MASK_DEINIT       ((uint32)0x00000000UL)

#define LIN_REG_CTL0_BREAK_DEL_LENGTH_POS   ((uint8)0x08u)
#define LIN_REG_CTL0_BREAK_WAKE_LENGTH_POS  ((uint8)0x10u)
#define LIN_REG_CTL0_FILTER_EN_POS          ((uint8)0x1Eu)

#define LIN_REG_CTL0_BREAK_DEL_LENGTH_MASK  ((uint32)0x00000300UL)
#define LIN_REG_CTL0_BREAK_WAKE_LENGTH_MASK ((uint32)0x001F0000UL)
#define LIN_REG_CTL0_FILTER_EN_MASK         ((uint32)0x40000000UL)
#define LIN_REG_STATUS_DATAIDX_MASK         ((uint32)0x0000000FUL)
#define LIN_REG_STATUS_HEAD_RES_MASK        ((uint32)0x00000010UL)
#define LIN_REG_STATUS_TX_BUSY_MASK         ((uint32)0x00000100UL)
#define LIN_REG_STATUS_RX_BUSY_MASK         ((uint32)0x00000200UL)
#define LIN_REG_STATUS_TX_DONE_MASK         ((uint32)0x00001000UL)
#define LIN_REG_STATUS_RX_DONE_MASK         ((uint32)0x00002000UL)
#define LIN_REG_STATUS_TX_H_BITERR_MASK     ((uint32)0x00010000UL)
#define LIN_REG_STATUS_TX_R_BITERR_MASK     ((uint32)0x00020000UL)
#define LIN_REG_STATUS_RX_H_FRAMERR_MASK    ((uint32)0x01000000UL)
#define LIN_REG_STATUS_RX_H_SYNCERR_MASK    ((uint32)0x02000000UL)
#define LIN_REG_STATUS_RX_H_PARIERR_MASK    ((uint32)0x04000000UL)
#define LIN_REG_STATUS_RX_R_FRAMERR_MASK    ((uint32)0x08000000UL)
#define LIN_REG_STATUS_RX_R_CSUMERR_MASK    ((uint32)0x10000000UL)
#define LIN_REG_PIDCSUM_PID_MASK            ((uint32)0x000000FFUL)
#define LIN_REG_CTL1_DATANR_MASK            ((uint32)0x00000007UL)
#define LIN_REG_INTR_TXHEADER_DONE_MASK     ((uint32)0x00000001UL)
#define LIN_REG_INTR_WAKEUP_DONE_MASK       ((uint32)0x00000400UL)
#define LIN_REG_INTR_TXCOMP_DONE_MASK       ((uint32)0x00030002UL)

#define LIN_DATA_PID_INDX    0u
#define LIN_DATA_LOW_INDX    1u
#define LIN_DATA0_MAX        4u
#define LIN_DATA_LENGTH_MAX  8u

/*==================[type definitions]======================================*/

typedef volatile uint32 uint_io32_t;



/* Deviation from MISRA-C:2004 rule 18.4, MISRA-C:2012 Rule-19.2
   Justification: It is necessary to use union type because of data conversion efficiency at the time 
   of transmission and reception. */
/* PRQA S 750 5 */
typedef union lin_undata_struct {
  uint32  u32Register;
  uint8   u8Byte[4];
  uint16  u16Halfword[2];
} Lin_unDataType;
  
  
/** \brief struct Lin_LinRegType
 **
 ** Internal type for HW access. Not designed here, but taken from the controller's
 ** headerfile.
 */
  /** Access type to an instance of multi functional serial interface. Not designed
   here, but taken from the controller's headerfile. See also HWM. */
typedef struct lin_linregtype_struct {
  uint_io32_t CTL0;                          /*!< 0x00000000 Control 0 */
  uint_io32_t CTL1;                          /*!< 0x00000004 Control 1 */
  uint_io32_t STATUS;                        /*!< 0x00000008 Status */
  uint_io32_t RESERVED;
  uint_io32_t CMD;                           /*!< 0x00000010 Command */
  uint_io32_t RESERVED1[19];
  uint_io32_t TX_RX_STATUS;                  /*!< 0x00000060 TX/RX status */
  uint_io32_t RESERVED2[7];
  uint_io32_t PID_CHECKSUM;                  /*!< 0x00000080 PID and checksum */
  uint_io32_t DATA0;                         /*!< 0x00000084 Response data 0 */
  uint_io32_t DATA1;                         /*!< 0x00000088 Response data 1 */
  uint_io32_t RESERVED3[13];
  uint_io32_t INTR;                          /*!< 0x000000C0 Interrupt */
  uint_io32_t INTR_SET;                      /*!< 0x000000C4 Interrupt set */
  uint_io32_t INTR_MASK;                     /*!< 0x000000C8 Interrupt mask */
  uint_io32_t INTR_MASKED;                   /*!< 0x000000CC Interrupt masked */
  uint_io32_t RESERVED4[12];
} Lin_LinRegType;                            /*!< Size = 256 (0x100) */

/*******************************************************************************
*                                     LIN
*******************************************************************************/

/*==================[external function declarations]========================*/

#define LIN_START_SEC_CODE_ASIL_B
#include "Lin_MemMap.h"

/** \brief Lin_ConstChGetLinBaseAdress_Internal
 **
 ** Internal function: obtain the Lin base address.
 **
 ** \return Base address of LIN.
 ** \param [in] ChannelIndex   channel index
 **
 */
extern volatile FUNC_P2VAR( Lin_LinRegType, AUTOMATIC, AUTOMATIC) Lin_ConstChGetLinBaseAdress_Internal 
(
  VAR(uint8, AUTOMATIC) ChannelIndex
);

/** \brief Lin_StartHwOperation_Internal
 **
 ** Internal function: trigger the HW to start transmission.
 **
 ** \param [in] ChannelIndex   channel index.
 **
 */
extern FUNC(void, AUTOMATIC) Lin_StartHwOperation_Internal
(
  VAR(uint8, AUTOMATIC) ChannelIndex
);

#define LIN_STOP_SEC_CODE_ASIL_B
#include "Lin_MemMap.h"

/*==================[end of file]===========================================*/

#endif /*!defined(LIN_LI_STATE_LI_H_INCLUDED)*/
