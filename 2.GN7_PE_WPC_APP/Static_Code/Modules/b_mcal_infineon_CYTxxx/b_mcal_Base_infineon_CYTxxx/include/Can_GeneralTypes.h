/** \brief Can_GeneralTypes.h
 **
 **  !!! EXAMPLE CODE ONLY !!!
 **
 ** ATTENTION:
 **   This file contains example code for integration only.
 **   This file must be removed during integration into ASR system.
 **   The content of this file may be used to generate the final file
 **   "Can_GeneralTypes.h" (at proper location within the ASR system).
 **
 ** NOTE:
 **   In lack of the final ASR file "Can_GeneralTypes.h", the CAN module has
 **   been tested / built with the content of this file.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

#ifndef CAN_GENERALTYPES_H_INCLUDED
#define CAN_GENERALTYPES_H_INCLUDED

/*==================[inclusions]============================================*/

#include <Std_Types.h>
#include <ComStack_Types.h>

/*==================[macros]================================================*/

/*==================[type definitions]======================================*/

/** \brief typedef  Can_IdType
 **
 ** Represents the identifier of an L-PDU. For extended IDs the most significant
 ** bit is set.
 */
typedef uint32 Can_IdType;

/** \brief struct Can_PduType
 **
 ** This type is used to provide ID, DLC and SDU from CAN interface to CAN driver.
 */
typedef struct can_pdutype_struct
{
  /** ID of the CAN message */
  VAR(Can_IdType, TYPEDEF) id;
  /** Length of the message in bytes */
  VAR(uint8, TYPEDEF) length;
  /** Pointer to the message buffer in RAM */
  P2VAR(uint8, TYPEDEF, TYPEDEF) sdu;
  /** Pdu Handle */
  VAR(PduIdType, TYPEDEF) swPduHandle;
} Can_PduType;

/** \brief enum Can_StateTransitionType
 **
 ** State transitions that are used by the function CAN_SetControllerMode
 */
typedef enum can_statetransitiontype_enum
{
  CAN_T_START,            /**< Start controller */
  CAN_T_STOP,             /**< Stop controller */
  CAN_T_SLEEP,            /**< Put controller in sleep mode */
  CAN_T_WAKEUP            /**< Wake up controller from sleep mode */
} Can_StateTransitionType;

/** \brief enum Can_ReturnType
 **
 ** Return values of CAN driver API .
 */
typedef enum can_returntype_enum
{
  CAN_OK,                 /**< Operation done */
  CAN_NOT_OK,             /**< Error occurred or wakeup event occurred during
                               sleep transition */
  CAN_BUSY                /**< Transmission already in progress */
} Can_ReturnType;

/** \brief typedef  Can_HwHandleType
 **
 ** Represents the hardware object handles of a CAN hardware unit.
 */
#ifdef CAN_EXTENDED_HW_HANDLE
typedef uint16 Can_HwHandleType;
#else
typedef uint8 Can_HwHandleType;
#endif

/** \brief struct Can_HwType
 **
 ** This type defines a data structure which clearly provides a hardware object
 ** handle including its corresponding CAN controller and therefore CanDrv as
 ** well as the specific CanId.
 */
typedef struct can_hwtype_struct
{
  /** Standard/Extended CAN ID of CAN L-PDU */
  VAR(Can_IdType, TYPEDEF) CanId;
  /** Length of the message in bytes */
  VAR(uint8, TYPEDEF) ControllerId;
  /** ID of the corresponding hardware object Range */
  VAR(Can_HwHandleType, TYPEDEF) Hoh;
} Can_HwType;

/** \brief enum CanTrcv_TrcvModeType
 **
 ** Operating modes of the CAN transceiver driver.
 */
typedef enum cantrcv_trcvmodetype_enum
{
  CANTRCV_TRCVMODE_NORMAL = 0,
  CANTRCV_TRCVMODE_SLEEP,
  CANTRCV_TRCVMODE_STANDBY
} CanTrcv_TrcvModeType;

/** \brief enum CanTrcv_TrcvWakeupReasonType
 **
 ** This type denotes the wake up reason detected by the CAN transceiver in detail.
 */
typedef enum cantrcv_trcvwakeupreasontype_enum
{
  CANTRCV_WU_BY_BUS,
  CANTRCV_WU_BY_PIN,
  CANTRCV_WU_ERROR,
  CANTRCV_WU_INTERNALLY,
  CANTRCV_WU_NOT_SUPPORTED,
  CANTRCV_WU_POWER_ON,
  CANTRCV_WU_RESET,
  CANTRCV_WU_BY_SYSERR
} CanTrcv_TrcvWakeupReasonType;

/** \brief enum CanTrcv_TrcvWakeupModeType
 **
 ** This type shall be used to control the CAN transceiver concerning wake up
 ** events and wake up notifications.
 */
typedef enum cantrcv_trcvwakeupmodetype_enum
{
  CANTRCV_WUMODE_CLEAR,
  CANTRCV_WUMODE_DISABLE,
  CANTRCV_WUMODE_ENABLE
} CanTrcv_TrcvWakeupModeType;

/* Changed by mobilgene - Start */
#ifndef AUTRON_CHANGE
/** \brief Configuration ID definition
 **
 ** ID of 0 is the default configuration. ID greater than 0 shall identify a configuration
 ** for Pretended Networking. There is more than 1 configuration possible
 */
typedef uint8 IcomConfigIdType;
#endif
/* Changed by mobilgene - End */

/*==================[external function declarations]========================*/

#endif /**defined(CAN_GENERALTYPES_H_INCLUDED)*/

/*==================[end of file]===========================================*/
