
#ifndef WDG_66_IA_DEM_H
#define WDG_66_IA_DEM_H 1

/** \brief AUTOSAR Wdg Driver
 **
 ** This file contains Diagnostic Event processing macros
 ** used by the library.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]=============================================*/

#include <Std_Types.h>          /* AUTOSAR standard types */

/*==================[macros]=================================================*/
/*==================[type definitions]=======================================*/

/* This type is used to handle DEM status internally.
 */
typedef enum
{
  WDG_66_IA_DEM_EVENT_STATUS_FAILED=0,
  WDG_66_IA_DEM_EVENT_STATUS_PASSED
}
Wdg_66_IA_DemEventStatusType;

/*==================[external function declarations]=========================*/

#define WDG_66_IA_START_SEC_CODE
#include <Wdg_66_IA_MemMap.h>

/** \brief Wdg_66_IA_ReportDemErrorStatusDisableRejected
 **
 ** This function is used to call DEM (WDG_66_IA_DEM_E_DISABLE_REJECTED) to
 ** report current status.
 **
 ** \param [in] ApiId      API id in order to identify the service which has
 **                        an error.
 ** \param [in] bSuccess   Status of the DEM event - error or success.
 */
extern FUNC( void, WDG_CODE )
Wdg_66_IA_ReportDemErrorStatusDisableRejected( VAR( uint8, AUTOMATIC ) ApiId, boolean bSuccess );

/** \brief Wdg_66_IA_ReportDemErrorStatusModeFailed
 **
 ** This function is used to call DEM (WDG_66_IA_DEM_E_MODE_FAIL) to report
 ** current status.
 **
 ** \param [in] ApiId      API id in order to identify the service which has
 **                        an error.
 ** \param [in] bSuccess   Status of the DEM event - error or success.
 */
extern FUNC( void, WDG_CODE )
Wdg_66_IA_ReportDemErrorStatusModeFailed( VAR( uint8, AUTOMATIC ) ApiId, boolean bSuccess );

/** \brief Wdg_66_IA_ReportDemErrorStatusHwTimeout
 **
 ** This function is used to call DEM (WDG_66_IA_DEM_E_HW_TIMEOUT) to report
 ** current status.
 **
 ** \param [in] ApiId      API id in order to identify the service which has
 **                        an error.
 ** \param [in] bSuccess   Status of the DEM event - error or success.
 */
extern FUNC( void, WDG_CODE )
Wdg_66_IA_ReportDemErrorStatusHwTimeout( VAR( uint8, AUTOMATIC ) ApiId, boolean bSuccess );

/** \brief Wdg_66_IA_ReportDemErrorStatusWdgStopped
 **
 ** This function is used to call DEM (WDG_66_IA_DEM_E_WDG_STOPPED) to report
 ** current status.
 **
 ** \param [in] ApiId      API id in order to identify the service which has
 **                        an error.
 ** \param [in] bSuccess   Status of the DEM event - error or success.
 */
extern FUNC( void, WDG_CODE )
Wdg_66_IA_ReportDemErrorStatusWdgStopped( VAR( uint8, AUTOMATIC ) ApiId, boolean bSuccess );

#define WDG_66_IA_STOP_SEC_CODE
#include <Wdg_66_IA_MemMap.h>

/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/

#endif /* if !defined( WDG_66_IA_DEM_H ) */
/*==================[end of file]============================================*/
