#ifndef GPT_DER_TIMER_COUNTER_H
#define GPT_DER_TIMER_COUNTER_H

/** \brief AUTOSAR Gpt GPT Driver
 **
 ** This file defines interfaces and macros of register access function.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]============================================*/
#include <Gpt_Public.h>          /* Module public types */

/*==================[macros]================================================*/
/* Bit masker for register operation */
#define GPT_TCPWM_CTRL_2BITS_MASK               3UL         /* 2bits mask for register operation.              */
#define GPT_TCPWM_CTRL_3BITS_MASK               7UL         /* 3bits mask for register operation.              */
#define GPT_TCPWM_CTRL_8BITS_MASK               0xFFUL      /* 8bits mask for register operation.              */
#define GPT_TCPWM_CTRL_16BITS_MASK              0xFFFFUL    /* 16bits mask for register operation.             */

/* Bit position item for CTRL register */
#define GPT_TCPWM_CTRL_AUTO_RELOAD_CC0          0U          /* CTRL[0] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_AUTO_RELOAD_CC1          1U          /* CTRL[1] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_AUTO_RELOAD_PERIOD       2U          /* CTRL[2] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_AUTO_RELOAD_LINE_SEL     3U          /* CTRL[3] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_CC0_MATCH_UP_EN          4U          /* CTRL[4] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_CC0_MATCH_DOWN_EN        5U          /* CTRL[5] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_CC1_MATCH_UP_EN          6U          /* CTRL[6] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_CC1_MATCH_DOWN_EN        7U          /* CTRL[7] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_PWM_IMM_KILL             8U          /* CTRL[8] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_PWM_STOP_ON_KILL         9U          /* CTRL[9] bit position for CTRL register.         */
#define GPT_TCPWM_CTRL_PWM_SYNC_KILL            10U         /* CTRL[10] bit position for CTRL register.        */
#define GPT_TCPWM_CTRL_UP_DOWN_MODE             16U         /* CTRL[17:16] bit position for CTRL register.     */
#define GPT_TCPWM_CTRL_ONE_SHOT                 18U         /* CTRL[18] bit position for CTRL register.        */
#define GPT_TCPWM_CTRL_QUAD_ENCODING_MODE       20U         /* CTRL[21:20] bit position for CTRL register.     */
#define GPT_TCPWM_CTRL_MODE                     24U         /* CTRL[26:24] bit position for CTRL register.     */
#define GPT_TCPWM_CTRL_DBG_PAUSE                30U         /* CTRL[30] bit position for CTRL register.        */
#define GPT_TCPWM_CTRL_ENABLED                  31U         /* CTRL[31] bit position for CTRL register.        */

/* Initialize CTRL register */
#define GPT_TCPWM_CTRL_INIT_MASK                0x000000F0U /* Initializes CTRL register except bit7-4.        */

/* Check value for uninitialize CTRL register */
#define GPT_TCPWM_CTRL_UNINITIALIZE_MASK        0xC737070FU /* Bit mask for uninitialized CTRL register.       */
#define GPT_TCPWM_CTRL_UNINITIALIZE_VALUE       0x00000000U /* Bit value for uninitialized CTRL register.      */

/* Check value for initialized CTRL register */
#define GPT_TCPWM_CTRL_INITIALIZED_MASK         0x8733070FU /* Bit mask for initialized CTRL register.         */
#define GPT_TCPWM_CTRL_INITIALIZED_VALUE        0x80000000U /* Bit value for initialized CTRL register.        */

/* Bit position item for STATUS register */
#define GPT_TCPWM_STATUS_DOWN                   0U          /* STATUS[0] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_CAPTURE0            4U          /* STATUS[4] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_COUNT               5U          /* STATUS[5] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_RELOAD              6U          /* STATUS[6] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_STOP                7U          /* STATUS[7] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_START               8U          /* STATUS[8] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_TR_CAPTURE1            9U          /* STATUS[9] bit position for STATUS register.     */
#define GPT_TCPWM_STATUS_LINE_OUT               10U         /* STATUS[10] bit position for STATUS register.    */
#define GPT_TCPWM_STATUS_LINE_COMPL_OUT         11U         /* STATUS[11] bit position for STATUS register.    */
#define GPT_TCPWM_STATUS_RUNNING                15U         /* STATUS[15] bit position for STATUS register.    */
#define GPT_TCPWM_STATUS_DT_CNT_L               16U         /* STATUS[23:16] bit position for STATUS register. */
#define GPT_TCPWM_STATUS_DT_CNT_H               24U         /* STATUS[31:24] bit position for STATUS register. */

/* Bit position item for DT register */
#define GPT_TCPWM_DT_INIT_VALUE                 0x00000000U /* Divide by 1 in timer mode.                      */
#define GPT_TCPWM_DT_LINE_OUT_L                 0U          /* DT[7:0] bit position for DT register.           */
#define GPT_TCPWM_DT_LINE_OUT_H                 8U          /* DT[15:8] bit position for DT register.          */
#define GPT_TCPWM_DT_LINE_COMPL_OUT             16U         /* DT[31:16] bit position for DT register.         */

/* Bit position item for TR_CMD register */
#define GPT_TCPWM_TR_CMD_CAPTURE0               0U          /* TR_CMD[0] bit position for TR_CMD register.     */
#define GPT_TCPWM_TR_CMD_RELOAD                 2U          /* TR_CMD[2] bit position for TR_CMD register.     */
#define GPT_TCPWM_TR_CMD_STOP                   3U          /* TR_CMD[3] bit position for TR_CMD register.     */
#define GPT_TCPWM_TR_CMD_START                  4U          /* TR_CMD[4] bit position for TR_CMD register.     */
#define GPT_TCPWM_TR_CMD_CAPTURE1               5U          /* TR_CMD[5] bit position for TR_CMD register.     */

/* Bit position item for TR_IN_SEL0 register */
#define GPT_TCPWM_TR_IN_SEL0_CAPTURE0_SEL       0U          /* TR_IN_SEL0[7:0] bit position for TR_IN_SEL0 register.          */
#define GPT_TCPWM_TR_IN_SEL0_COUNT_SEL          8U          /* TR_IN_SEL0[15:8] bit position for TR_IN_SEL0 register.         */
#define GPT_TCPWM_TR_IN_SEL0_RELOAD_SEL         16U         /* TR_IN_SEL0[23:16] bit position for TR_IN_SEL0 register.        */
#define GPT_TCPWM_TR_IN_SEL0_STOP_SEL           24U         /* TR_IN_SEL0[31:24] bit position for TR_IN_SEL0 register.        */

/* Bit position item for TR_IN_SEL1 register */
#define GPT_TCPWM_TR_IN_SEL1_INIT_VALUE         0x00000000U /* Trigger always '0' */
#define GPT_TCPWM_TR_IN_SEL1_START_SEL          0U          /* TR_IN_SEL1[7:0] bit position for TR_IN_SEL1 register.          */
#define GPT_TCPWM_TR_IN_SEL1_CAPTURE1_SEL       8U          /* TR_IN_SEL1[15:8] bit position for TR_IN_SEL1 register.         */

/* Bit position item for TR_IN_EDGE_SEL register */
#define GPT_TCPWM_TR_IN_EDGE_SEL_CAPTURE0_EDGE  0U          /* TR_IN_EDGE_SEL[1:0] bit position for TR_IN_EDGE_SEL register.   */
#define GPT_TCPWM_TR_IN_EDGE_SEL_COUNT_EDGE     2U          /* TR_IN_EDGE_SEL[3:2] bit position for TR_IN_EDGE_SEL register.   */
#define GPT_TCPWM_TR_IN_EDGE_SEL_RELOAD_EDGE    4U          /* TR_IN_EDGE_SEL[5:4] bit position for TR_IN_EDGE_SEL register.   */
#define GPT_TCPWM_TR_IN_EDGE_SEL_STOP_EDGE      6U          /* TR_IN_EDGE_SEL[7:6] bit position for TR_IN_EDGE_SEL register.   */
#define GPT_TCPWM_TR_IN_EDGE_SEL_START_EDGE     8U          /* TR_IN_EDGE_SEL[9:8] bit position for TR_IN_EDGE_SEL register.   */
#define GPT_TCPWM_TR_IN_EDGE_SEL_CAPTURE1_EDGE  10U         /* TR_IN_EDGE_SEL[11:10] bit position for TR_IN_EDGE_SEL register. */

/* Initialization value for TR_IN_EDGE_SEL register */
#define GPT_TCPWM_TR_IN_EDGE_SEL_TC_INIT_VALUE  0x00000FFFU /* All edge with NO_EDGE_DET */
#define GPT_TCPWM_TR_IN_EDGE_SEL_COUNT_RISING   0x00000FF3U /* COUNT edge with RISING */

/* Setting value of TR_IN_EDGE_SEL register */
#define GPT_TCPWM_TR_IN_EDGE_SEL_NO_EDGE_DET    3UL         /* No edge detection value of TR_IN_EDGE_SEL register.     */

/* Check value for uninitialize TR_IN_EDGE_SEL register */
#define GPT_TCPWM_TR_IN_EDGE_SEL_UNINIT_MASK    0x00000FFFU /* Bit mask for uninitialized TR_IN_EDGE_SEL register.     */
#define GPT_TCPWM_TR_IN_EDGE_SEL_UNINIT_VALUE   0x00000FFFU /* Bit value for uninitialized TR_IN_EDGE_SEL register.    */

/* Bit position item for TR_PWM_CTRL register */
#define GPT_TCPWM_TR_PWM_CTRL_CC0_MATCH_MODE    0U          /* TR_PWM_CTRL[1:0] bit position for TR_PWM_CTRL register. */
#define GPT_TCPWM_TR_PWM_CTRL_OVERFLOW_MODE     2U          /* TR_PWM_CTRL[3:2] bit position for TR_PWM_CTRL register. */
#define GPT_TCPWM_TR_PWM_CTRL_UNDERFLOW_MODE    4U          /* TR_PWM_CTRL[5:4] bit position for TR_PWM_CTRL register. */
#define GPT_TCPWM_TR_PWM_CTRL_CC1_MATCH_MODE    6U          /* TR_PWM_CTRL[7:6] bit position for TR_PWM_CTRL register. */

/* Bit position item for TR_OUT_SEL register */
#define GPT_TCPWM_TR_OUT_SEL_OUT0               0U          /* TR_PWM_CTRL[2:0] bit position for TR_OUT_SEL register.  */
#define GPT_TCPWM_TR_OUT_SEL_OUT1               4U          /* TR_PWM_CTRL[6:4] bit position for TR_OUT_SEL register.  */

/* Default value for TR_OUT_SEL register */
#define GPT_TCPWM_TR_OUT_SEL_DEFAULT_VALUE      0x00000032U /* Output trigger out0:tc and out1 cc0 match.              */

/* Initialization value for TR_OUT_SEL register */
#define GPT_TCPWM_TR_OUT_SEL_DISABLE_VALUE      0x00000077U /* Output trigger disabled.                                */
#define GPT_TCPWM_TR_OUT_SEL_OUT0_TC_VALUE      0x00000072U /* Output trigger out0: tc, out1: disabled.                */

/* Setting value of TR_OUT_SEL register */
#define GPT_TCPWM_TR_OUT_SEL_OUT_TC             2UL         /* Terminal count event value of TR_OUT_SEL register.      */
#define GPT_TCPWM_TR_OUT_SEL_OUT_CC0_MATCH      3UL         /* Compare match 0 event value of TR_OUT_SEL register.     */

/* Set value for INTR register */
#define GPT_TCPWM_INTR_CLEAR_TC                 0x00000001U /* Clear INTR[0] bit                                       */
#define GPT_TCPWM_INTR_CLEAR_ALL_CAUSE          0x00000007U /* Clear all interrupt cause of INTR register              */

/* Bit position item for INTR register */
#define GPT_TCPWM_INTR_TC                       0U          /* INTR[0] bit position for INTR register.           */
#define GPT_TCPWM_INTR_CC0_MATCH                1U          /* INTR[1] bit position for INTR register.           */
#define GPT_TCPWM_INTR_CC1_MATCH                2U          /* INTR[2] bit position for INTR register.           */

/* Bit position item for INTR_SET register */
#define GPT_TCPWM_INTR_SET_TC                   0U          /* INTR_SET[0] bit position for INTR_SET register.   */
#define GPT_TCPWM_INTR_SET_CC0_MATCH            1U          /* INTR_SET[1] bit position for INTR_SET register.   */
#define GPT_TCPWM_INTR_SET_CC1_MATCH            2U          /* INTR_SET[2] bit position for INTR_SET register.   */

/* Default value for TR_OUT_SEL register */
#define GPT_TCPWM_INTR_MASK_DEFAULT_VALUE       0x00000000U /* Interrupt request disabled.                       */
#define GPT_TCPWM_INTR_MASK_ONESHOT_VALUE       0x00000001U /* Interrupt request enabled.                        */

/* Set value for INTR_MASK register */
#define GPT_TCPWM_INTR_MASK_CLEAR_TC            0x00000000U /* Clear INTR_MASK bit                               */
#define GPT_TCPWM_INTR_MASK_SET_TC              0x00000001U /* Set INTR_MASK bit                                 */

/* Bit position item for INTR_MASK register */
#define GPT_TCPWM_INTR_MASK_TC                  0U          /* INTR_MASK[0] bit position for INTR_MASK register. */
#define GPT_TCPWM_INTR_MASK_CC0_MATCH           1U          /* INTR_MASK[1] bit position for INTR_MASK register. */
#define GPT_TCPWM_INTR_MASK_CC1_MATCH           2U          /* INTR_MASK[2] bit position for INTR_MASK register. */

/* Bit position item for INTR_MASKED register */
#define GPT_TCPWM_INTR_MASKED_TC                0U          /* INTR_MASKED[0] bit position for INTR_MASKED register. */
#define GPT_TCPWM_INTR_MASKED_CC0_MATCH         1U          /* INTR_MASKED[1] bit position for INTR_MASKED register. */
#define GPT_TCPWM_INTR_MASKED_CC1_MATCH         2U          /* INTR_MASKED[2] bit position for INTR_MASKED register. */

/* GPT prescaler value set to DT_LINE_OUT_L bits of DT register */
#define GPT_PRESCALER_DIVIDE_BY_1               0U          /* Prescaler value of pre-scalling is divide by 1.   */
#define GPT_PRESCALER_DIVIDE_BY_2               1U          /* Prescaler value of pre-scalling is divide by 2.   */
#define GPT_PRESCALER_DIVIDE_BY_4               2U          /* Prescaler value of pre-scalling is divide by 4.   */
#define GPT_PRESCALER_DIVIDE_BY_8               3U          /* Prescaler value of pre-scalling is divide by 8.   */
#define GPT_PRESCALER_DIVIDE_BY_16              4U          /* Prescaler value of pre-scalling is divide by 16.  */
#define GPT_PRESCALER_DIVIDE_BY_32              5U          /* Prescaler value of pre-scalling is divide by 32.  */
#define GPT_PRESCALER_DIVIDE_BY_64              6U          /* Prescaler value of pre-scalling is divide by 64.  */
#define GPT_PRESCALER_DIVIDE_BY_128             7U          /* Prescaler value of pre-scalling is divide by 128. */
#define GPT_PRESCALER_INVALID                   0xFFU       /* Invalid prescaler value                           */

#define GPT_TCPWM_PERIOD                        0xFFFFFFFFU /* Upper value of the counter.     */
#define GPT_TCPWM_COUNTER                       0x00000000U /* 16-bit / 32-bit counter value.  */

/*==================[type definitions]======================================*/
/*==================[external function declarations]========================*/
#define GPT_START_SEC_CODE_ASIL_B
#include <Gpt_MemMap.h>

/** \brief Gpt_GetTbl_GPT_TimerCounter()
 **
 ** This function returns the table pointer of Gpt_CounterTimerDrvFctTable.
 **
 ** \return Function table pointer of the Counter Timer.
*/
extern FUNC_P2CONST(Gpt_TcpwmDrvFctTable_t, AUTOMATIC, GPT_CODE) Gpt_GetTbl_GPT_TimerCounter
(
  void
);

/** \brief Gpt_TimerCounterDisableInterrupt().
 **
 ** This function disables interrupt of specific channel.
 **
 ** \param[in] BaseAddrPtr    Base address of channel to disable interrupt.
**/
extern FUNC(void, GPT_CODE) Gpt_TimerCounterDisableInterrupt
(
  volatile P2VAR(uint32, GPT_CONST, REGSPACE) BaseAddrPtr
);

#define GPT_STOP_SEC_CODE_ASIL_B
#include <Gpt_MemMap.h>

/*==================[internal function declarations]========================*/
/*==================[external constants]====================================*/
/*==================[internal constants]====================================*/
/*==================[external data]=========================================*/
/*==================[internal data]=========================================*/
/*==================[external function definitions]=========================*/
/*==================[internal function definitions]=========================*/

#endif
/*==================[end of file]===========================================*/
