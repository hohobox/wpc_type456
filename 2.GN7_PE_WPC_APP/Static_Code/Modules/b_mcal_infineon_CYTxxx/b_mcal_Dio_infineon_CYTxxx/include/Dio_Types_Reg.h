#ifndef DIO_TYPES_REG_H
#define DIO_TYPES_REG_H

/** \brief AUTOSAR Dio DIO Driver
 **
 ** This file defines the register type definition of Dio driver.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]=============================================*/
#include <Std_Types.h>         /* AUTOSAR standard types */
/*==================[macros]=================================================*/

/*==================[type definitions]=======================================*/

/*------------------------[Register definitions]-----------------------------*/
/** \brief GPIO Port Register(OUT/OUT_SET/OUT_CLR/IN/CFG) map structure
 **
 ** This structure is the GPIO Port Register(OUT/OUT_SET/OUT_CLR/IN/CFG) Map. 
 */

typedef struct
{
    uint32    GPIO_PRT_OUT;         /* GPIO_PRT.OUT     reguster */
    uint32    GPIO_PRT_OUT_CLR;     /* GPIO_PRT.OUT_CLR reguster */
    uint32    GPIO_PRT_OUT_SET;     /* GPIO_PRT.OUT_SET reguster */
    uint32    GPIO_PRT_OUT_INV;     /* GPIO_PRT.OUT_INV reguster */
    uint32    GPIO_PRT_IN;          /* GPIO_PRT.IN      reguster */
    uint32    reserve1[12];         /* reserved */
    uint32    GPIO_PRT_CFG;         /* GPIO_PRT.CFG     reguster */
    uint32    reserve2[14];         /* reserved */
} Dio_GpioPrtRegisterType;

/*----------------[Definition of type Dio_RegisterInfomartionType]-----------*/
/** \brief IO Port Register Information structure
 **
 ** This structure contains the information for IO Port register address.
 */
typedef struct
{
    volatile CONSTP2VAR(Dio_GpioPrtRegisterType, AUTOMATIC, REGSPACE) gpioPrtRegBaseAddrPtr;
                                                    /* GPIO_PRT base address */
} Dio_IORegisterInfoType;

/*==================[external function declarations]=========================*/

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#endif /* DIO_TYPES_REG_H */
/*==================[end of file]============================================*/
