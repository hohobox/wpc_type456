/** \brief AUTOSAR Fee Flash EEPROM Emulation
 **
 ** This file defines the interface of the AUTOSAR module Fee.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-FEE42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
*/

#ifndef FEE_TYPES_H_INCLUDED
#define FEE_TYPES_H_INCLUDED


/*****************************************************************************/
/* Include files                                                             */
/*****************************************************************************/
#include "Std_Types.h"

/*****************************************************************************/
/* Global pre-processor symbols/macros ('#define')                           */
/*****************************************************************************/

/*****************************************************************************/
/* Global type definitions ('typedef')                                       */
/*****************************************************************************/

/**
 ******************************************************************************
 ** /typedef  Fee_ErrorNotificationPtrType
 **
 ** Will be called on error of an FEE job
 **
 *****************************************************************************/
typedef P2FUNC(void, TYPEDEF, Fee_ErrorNotificationPtrType) (void);
/**
 ******************************************************************************
 ** /typedef  Fee_EndNotificationPtrType
 **
 ** Will be called after a FEE job has successful finished
 **
 *****************************************************************************/
typedef P2FUNC(void, TYPEDEF, Fee_EndNotificationPtrType) (void);
/**
 ******************************************************************************
 ** /struct Fee_ConfigType
 **
 ** Describe the structure of the configuration data filled by the FEE
 ** configuration tool.
 **
 *****************************************************************************/
typedef struct
{
    VAR(Fee_EndNotificationPtrType, AUTOMATIC)    FeeNvmJobEndNotification;
    VAR(Fee_ErrorNotificationPtrType, AUTOMATIC)  FeeNvmJobErrorNotification;
    VAR(uint16, AUTOMATIC)                        FeeVirtualPageSize;
} Fee_ConfigType;

/**
 ******************************************************************************
 ** /struct Fee_BlockConfigType
 **
 ** Describe the structure of the data blocks configuration data filled by the FEE
 ** configuration tool.
 **
 *****************************************************************************/
typedef struct
{
    VAR(uint16, AUTOMATIC)                        FeeBlockNumber;
    VAR(uint16, AUTOMATIC)                        FeeBlockSize;
    VAR(boolean, AUTOMATIC)                       FeeImmediateData;
} Fee_BlockConfigType;

/**
 ******************************************************************************
 ** /struct Fee_BlockAttributeType
 **
 ** Describe the structure of the block attribution.
 **
 *****************************************************************************/
typedef struct
{
    VAR(uint16, AUTOMATIC)                        FeeBlockIndex;
    VAR(uint8, AUTOMATIC)                         FeeConfigSetNumber;
} Fee_BlockAttributeType;

/**
 ******************************************************************************
 ** /struct Fee_OldSectorStatusType
 **
 ** Describe the infomation of the old sector.
 **
 *****************************************************************************/
typedef struct
{
    VAR(uint8, AUTOMATIC)                        FeeSectorStatus;
    VAR(uint8, AUTOMATIC)                        FeePsc1;
    VAR(uint8, AUTOMATIC)                        FeePsc2;
    VAR(uint8, AUTOMATIC)                        FeeOldLogicalNumber;
    VAR(uint32, AUTOMATIC)                       FeePscChecksum;
    VAR(uint32, AUTOMATIC)                       FeeSectorAddress;
} Fee_OldSectorStatusType;


#endif /*!defined(FEE_TYPES_H_INCLUDED)*/

