
#ifndef WDG_66_IA_TYPES_DER_H
#define WDG_66_IA_TYPES_DER_H 1

/** \brief AUTOSAR Wdg Driver
 **
 ** This file contains internal commonly used declarations by the AUTOSAR
 ** Wdg driver. Especially this file includes hardware specific definitions.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]=============================================*/

#include <Std_Types.h>          /* AUTOSAR standard types */

/*==================[macros]=================================================*/
/*==================[type definitions]=======================================*/

/* This structure specifies type of the SRSS registers related to watchdog timer. */
typedef struct
{
  VAR(uint32, AUTOMATIC)   CTL;               /* CTL register */
  VAR(uint32, AUTOMATIC)   LOWER_LIMIT;       /* LOWER_LIMIT register */
  VAR(uint32, AUTOMATIC)   UPPER_LIMIT;       /* UPPER_LIMIT register */
  VAR(uint32, AUTOMATIC)   WARN_LIMIT;        /* WARN_LIMIT register */
  VAR(uint32, AUTOMATIC)   CONFIG;            /* CONFIG register */
  VAR(uint32, AUTOMATIC)   CNT;               /* CNT register */
  VAR(uint32, AUTOMATIC)   Reserved1[10];     /* Reserved */
  VAR(uint32, AUTOMATIC)   LOCK;              /* LOCK register */
  VAR(uint32, AUTOMATIC)   SERVICE;           /* SERVICE register */
  VAR(uint32, AUTOMATIC)   Reserved2[2];      /* Reserved */
  VAR(uint32, AUTOMATIC)   INTR;              /* INTR register */
  VAR(uint32, AUTOMATIC)   INTR_SET;          /* INTR_SET register */
  VAR(uint32, AUTOMATIC)   INTR_MASK;         /* INTR_MASK register */
  VAR(uint32, AUTOMATIC)   INTR_MASKED;       /* INTR_MASKED register */
}
Wdg_66_IA_WdtRegType;

/* This structure specifies type of the SRSS registers related to multi-counter watchdog timer. */
typedef struct
{
  VAR(uint32, AUTOMATIC)   CTL;               /* CTL register */
  VAR(uint32, AUTOMATIC)   LOWER_LIMIT;       /* LOWER_LIMIT register */
  VAR(uint32, AUTOMATIC)   UPPER_LIMIT;       /* UPPER_LIMIT register */
  VAR(uint32, AUTOMATIC)   WARN_LIMIT;        /* WARN_LIMIT register */
  VAR(uint32, AUTOMATIC)   CONFIG;            /* CONFIG register */
  VAR(uint32, AUTOMATIC)   CNT;               /* CNT register */
  VAR(uint32, AUTOMATIC)   Reserved1[10];     /* Reserved */
  VAR(uint32, AUTOMATIC)   CPU_SELECT;        /* MCWDT CPU selection register */
  VAR(uint32, AUTOMATIC)   Reserved2[19];     /* Reserved */
  VAR(uint32, AUTOMATIC)   LOCK;              /* LOCK register */
  VAR(uint32, AUTOMATIC)   SERVICE;           /* SERVICE register */
  VAR(uint32, AUTOMATIC)   Reserved3[2];      /* Reserved */
  VAR(uint32, AUTOMATIC)   INTR;              /* INTR register */
  VAR(uint32, AUTOMATIC)   INTR_SET;          /* INTR_SET register */
  VAR(uint32, AUTOMATIC)   INTR_MASK;         /* INTR_MASK register */
  VAR(uint32, AUTOMATIC)   INTR_MASKED;       /* INTR_MASKED register */
  VAR(uint32, AUTOMATIC)   Reserved4[20];     /* Reserved */
}
Wdg_66_IA_McwdtRegType;

/* This structure specifies type of the SRSS registers related to watchdog driver */
typedef struct
{
  VAR(uint32, AUTOMATIC)                   Reserved1[8192];  /* Reserved */
  VAR(Wdg_66_IA_McwdtRegType, AUTOMATIC)   MCWDTReg[4];      /* Registers of Multi-Counter Watchdog Timer */
  VAR(uint32, AUTOMATIC)                   Reserved2[3840];  /* Reserved */
  VAR(Wdg_66_IA_WdtRegType, AUTOMATIC)     WDTReg;           /* Registers of Watchdog Timer */
}
Wdg_66_IA_SrssRegType;

/*==================[external function declarations]=========================*/
/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/

#endif /* if !defined( WDG_66_IA_TYPES_DER_H ) */
/*==================[end of file]============================================*/
