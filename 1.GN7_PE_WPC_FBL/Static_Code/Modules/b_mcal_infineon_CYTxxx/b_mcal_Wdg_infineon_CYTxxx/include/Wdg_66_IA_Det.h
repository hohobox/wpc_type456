
#ifndef WDG_66_IA_DET_H
#define WDG_66_IA_DET_H 1

/** \brief AUTOSAR Wdg Driver
 **
 ** This file contains development error processing macros
 ** used by the library.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]=============================================*/

#include <Std_Types.h>          /* AUTOSAR standard types */

/*==================[macros]=================================================*/

#if defined ( WDG_66_IA_DEV_ERROR_DETECT )
#if ( WDG_66_IA_DEV_ERROR_DETECT == STD_ON )
#include <Det.h>

/** WDG instance id used for DET reports */
#define WDG_66_IA_INSTANCE_ID_DET 0u

/*
 * WDG_66_IA_DET_REPORTERROR()
 *
 * In development mode, this macro reports the indicated error to the
 * Development error tracer (Det). The parameters are:
 *  a -- API id
 *  e -- error id
 */
/* Deviation from MISRA-C:2004 rule 19.7, MISRA-C:2012 Dir-4.9
   Justification: In case of using in small processing, function-like macro is used. 
                  It improves readability. */
/* PRQA S 3453 2 */
#define WDG_66_IA_DET_REPORTERROR(a,e) \
    (void)Det_ReportError( WDG_66_IA_MODULE_ID, WDG_66_IA_INSTANCE_ID_DET, (a), (e))

#else
/*
 * WDG_66_IA_DET_REPORTERROR()
 *
 * In production mode the macro evaluates to nothing. No error is reported.
 *  a -- API id
 *  e -- error id
 */
#define WDG_66_IA_DET_REPORTERROR(a,e)

#endif /* #if ( WDG_66_IA_DEV_ERROR_DETECT == STD_ON ) */
#endif /* #if defined ( WDG_66_IA_DEV_ERROR_DETECT ) */

/*==================[type definitions]=======================================*/
/*==================[external function declarations]=========================*/

#define WDG_66_IA_START_SEC_CODE
#include <Wdg_66_IA_MemMap.h>

/** \brief Wdg_66_IA_ReportDetError
 **
 ** This function is used to report an error to the error handler and optionally
 ** to the DET in the Wdg module.
 **
 ** \param [in] ApiId   Id of the service that detected the error.
 ** \param [in] ErrorId   Id of the error that was detected.
 */
extern FUNC( void, WDG_CODE )
Wdg_66_IA_ReportDetError( VAR( uint8, AUTOMATIC ) ApiId, VAR( uint8, AUTOMATIC ) ErrorId );

#define WDG_66_IA_STOP_SEC_CODE
#include <Wdg_66_IA_MemMap.h>

/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/

#endif /* if !defined( WDG_66_IA_DET_H ) */
/*==================[end of file]============================================*/
