#ifndef PORT_REGS_H
#define PORT_REGS_H

/** \brief AUTOSAR Port Port Driver
 **
 ** This file define interface of register access function.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL42-DRV
 **
 ** (c) 2017-2022, Cypress Semiconductor Corporation (an Infineon company) or
 ** an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
 ** This software, including source code, documentation and related materials
 ** ("Software") is owned by Cypress Semiconductor Corporation or one of
 ** its affiliates ("Cypress") and is protected by and subject to worldwide
 ** patent protection (United States and foreign), United States copyright laws
 ** and international treaty provisions.  Therefore, you may use this Software
 ** only as provided in the license agreement accompanying the software package
 ** from which you obtained this Software ("EULA").
 ** If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
 ** non-transferable license to copy, modify,
 ** and compile the Software source code solely for use in connection
 ** with Cypress's integrated circuit products.
 ** Any reproduction, modification, translation, compilation,
 ** or representation of this Software except as specified above is prohibited
 ** without the express written permission of Cypress.
 ** Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
 ** EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
 ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ** Cypress reserves the right to make changes to the Software without notice.
 ** Cypress does not assume any liability arising out of the application or
 ** use of the Software or any product or circuit described in the Software.
 ** Cypress does not authorize its products for use in any products
 ** where a malfunction or failure of the Cypress product may reasonably be
 ** expected to result in significant property damage,
 ** injury or death ("High Risk Product"). By including Cypress's product
 ** in a High Risk Product, the manufacturer of such system or application
 ** assumes all risk of such use and in doing so agrees to indemnify Cypress
 ** against all liability.
 */

/*==================[inclusions]=============================================*/
#include <Port_Cfg_Der_Internal_Defaults.h> /* PORT driver configuration setting defines */

/*==================[macros]=================================================*/
/*==================[type definitions]=======================================*/
/*==================[external function declarations]=========================*/
#define PORT_START_SEC_CODE_ASIL_B
#include <Port_MemMap.h>

/** \brief Port_WriteOUT() write OUT Register
 **
 ** This function write OUT Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteOUT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadOUT() read OUT Register
 **
 ** This function read OUT Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of OUT Register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadOUT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG() write CFG Register
 **
 ** This function write CFG Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG() read CFG Register
 **
 ** This function read CFG Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG Register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_IN() write CFG_IN Register
 **
 ** This function write CFG_IN Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_IN
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG_IN() read CFG_IN Register
 **
 ** This function read CFG_IN Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_IN register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_IN
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_OUT() write CFG_OUT Register
 **
 ** This function write CFG_OUT Register.
 **
 ** \param[in]  EnvDataPtr     The pointer of register address information
 ** \param[in]  PortNumber     The port number of register
 ** \param[in]  SetValue       The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_OUT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG_OUT() read CFG_OUT Register
 **
 ** This function read CFG_OUT Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_OUT register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_OUT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_SIO() write CFG_SIO Register
 **
 ** This function write CFG_SIO Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_SIO
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG_SIO() read CFG_SIO Register
 **
 ** This function read CFG_SIO Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_SIO register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_SIO
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteDFT_SIO() write DFT_SIO Register
 **
 ** This function write DFT_SIO Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteDFT_SIO
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadDFT_SIO() read DFT_SIO Register
 **
 ** This function read DFT_SIO Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of DFT_SIO register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadDFT_SIO
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_IN_GPIO5V() write CFG_IN_GPIO5V Register
 **
 ** This function write CFG_IN_GPIO5V Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_IN_GPIO5V
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG_IN_GPIO5V() read CFG_IN_GPIO5V Register
 **
 ** This function read CFG_IN_GPIO5V Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_IN_GPIO5V register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_IN_GPIO5V
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WritePORT_SEL0() write PORT_SEL0 Register
 **
 ** This function write PORT_SEL0 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WritePORT_SEL0
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadPORT_SEL0() read PORT_SEL0 Register
 **
 ** This function read PORT_SEL0 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of PORT_SEL0 register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadPORT_SEL0
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WritePORT_SEL1() write PORT_SEL1 Register
 **
 ** This function write PORT_SEL1 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WritePORT_SEL1
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadPORT_SEL1() read PORT_SEL1 Register
 **
 ** This function read PORT_SEL1 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of PORT_SEL1 register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadPORT_SEL1
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteAMUX_SPLIT_CTL() write AMUX_SPLIT_CTL Register
 **
 ** This function write AMUX_SPLIT_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  cell_id      The id of AMUX splitter cell
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteAMUX_SPLIT_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_AmuxCellType   cell_id,
  uint32              SetValue
);

/** \brief Port_ReadAMUX_SPLIT_CTL() read AMUX_SPLIT_CTL Register
 **
 ** This function read AMUX_SPLIT_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  cell_id      The id of AMUX splitter cell
 ** \return     value of AMUX_SPLIT_CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadAMUX_SPLIT_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_AmuxCellType   cell_id
);

/** \brief Port_WriteCTL() write CTL Register
 **
 ** This function write CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCTL() read CTL Register
 **
 ** This function read CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteSYNC_CTL() write SYNC_CTL Register
 **
 ** This function write SYNC_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteSYNC_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadSYNC_CTL() read SYNC_CTL Register
 **
 ** This function read SYNC_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of SYNC_CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadSYNC_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteLUT_SEL() write LUT_SEL Register
 **
 ** This function write LUT_SEL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  PinNumber    The id of port pin
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteLUT_SEL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  Port_PinType    PinNumber,
  uint32          SetValue
);

/** \brief Port_ReadLUT_SEL() read LUT_SEL Register
 **
 ** This function read LUT_SEL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  PinNumber    The id of port pin
 ** \return     value of LUT_SEL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadLUT_SEL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  Port_PinType    PinNumber
);

/** \brief Port_WriteLUT_CTL() write LUT_CTL Register
 **
 ** This function write LUT_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  PinNumber    The id of port pin
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteLUT_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  Port_PinType    PinNumber,
  uint32          SetValue
);

/** \brief Port_ReadLUT_CTL() read LUT_CTL Register
 **
 ** This function read LUT_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  PinNumber    The id of port pin
 ** \return     value of LUT_CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadLUT_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  Port_PinType    PinNumber
);

/** \brief Port_WriteDU_SEL() write DU_SEL Register
 **
 ** This function write DU_SEL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteDU_SEL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadDU_SEL() read DU_SEL Register
 **
 ** This function read DU_SEL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of DU_SEL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadDU_SEL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteDU_CTL() write DU_CTL Register
 **
 ** This function write DU_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteDU_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadDU_CTL() read DU_CTL Register
 **
 ** This function read DU_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of DU_CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadDU_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteDATA() write DATA Register
 **
 ** This function write DATA Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteDATA
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadDATA() read DATA Register
 **
 ** This function read DATA Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of DATA register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadDATA
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_OUT2() write CFG_OUT2 Register
 **
 ** This function write CFG_OUT2 Register.
 **
 ** \param[in]  EnvDataPtr     The pointer of register address information
 ** \param[in]  PortNumber     The port number of register
 ** \param[in]  SetValue       The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_OUT2
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber,
  uint32          SetValue
);

/** \brief Port_ReadCFG_OUT2() read CFG_OUT2 Register
 **
 ** This function read CFG_OUT2 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_OUT2 register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_OUT2
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType   PortNumber
);

/** \brief Port_WriteCFG_SLEW_EXT() write CFG_SLEW_EXT Register
 **
 ** This function write CFG_SLEW_EXT Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_SLEW_EXT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber,
  uint32        SetValue
);

/** \brief Port_ReadCFG_SLEW_EXT() read CFG_SLEW_EXT Register
 **
 ** This function read CFG_SLEW_EXT Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_SLEW_EXT register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_SLEW_EXT
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber
);

/** \brief Port_WriteCFG_DRIVE_EXT0() write CFG_DRIVE_EXT0 Register
 **
 ** This function write CFG_DRIVE_EXT0 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_DRIVE_EXT0
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber,
  uint32        SetValue
);

/** \brief Port_ReadCFG_DRIVE_EXT0() read CFG_DRIVE_EXT0 Register
 **
 ** This function read CFG_DRIVE_EXT0 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_DRIVE_EXT0 register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_DRIVE_EXT0
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber
);

/** \brief Port_WriteCFG_DRIVE_EXT1() write CFG_DRIVE_EXT1 Register
 **
 ** This function write CFG_DRIVE_EXT1 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteCFG_DRIVE_EXT1
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber,
  uint32        SetValue
);

/** \brief Port_ReadCFG_DRIVE_EXT1() read CFG_DRIVE_EXT1 Register
 **
 ** This function read CFG_DRIVE_EXT1 Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  PortNumber   The port number of register
 ** \return     value of CFG_DRIVE_EXT1 register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadCFG_DRIVE_EXT1
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST) EnvDataPtr,
  Port_PortType PortNumber
);

/** \brief Port_WriteTR_CMD() write TR_CMD Register
 **
 ** This function writes TR_CMD Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteTR_CMD
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST)  EnvDataPtr,
  uint32  SetValue
);

/** \brief Port_ReadTR_CMD() read TR_CMD Register
 **
 ** This function reads TR_CMD Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \return     value of TR_CMD register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadTR_CMD
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST)  EnvDataPtr
);

/** \brief Port_WriteTR_CTL() write TR_CTL Register
 **
 ** TThis function writes TR_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  group_id     Trigger group ID number
 ** \param[in]  out_trg      Output trigger ID number
 ** \param[in]  SetValue     The written value
 ** */
extern FUNC(void,PORT_CODE) Port_WriteTR_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST)  EnvDataPtr,
  Port_TriggerGroupIdType  group_id,
  Port_TriggerIdType       out_trg,
  uint32                   SetValue
);

/** \brief Port_ReadTR_CTL() read DATA Register
 **
 ** This function reads TR_CTL Register.
 **
 ** \param[in]  EnvDataPtr   The pointer of data stored environment information
 ** \param[in]  group_id     Trigger group ID number
 ** \param[in]  out_trg      Output trigger ID number
 ** \return     value of TR_CTL register
 ** */
extern FUNC(uint32,PORT_CODE) Port_ReadTR_CTL
(
  P2CONST(Port_DriverEnvType,AUTOMATIC,PORT_CONST)  EnvDataPtr,
  Port_TriggerGroupIdType  group_id,
  Port_TriggerIdType       out_trg
);

#define PORT_STOP_SEC_CODE_ASIL_B
#include <Port_MemMap.h>

/*==================[internal function declarations]=========================*/
/*==================[external constants]=====================================*/
/*==================[internal constants]=====================================*/
/*==================[external data]==========================================*/
/*==================[internal data]==========================================*/
/*==================[external function definitions]==========================*/
/*==================[internal function definitions]==========================*/

#endif /* PORT_REGS_H  */
/*==================[end of file]============================================*/
