
/*******************************************************************************
**  FILE-NAME: Rte_Csm.h                                                     **
**                                                                            **
**  MODULE-NAME: AUTOSAR RTE GENERATION TOOL                                  **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 4.11.1                                                   **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/
/*
 * INPUT FILE:
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\ECUCD_EcucValueCollection.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Com.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Crypto_76_HaeModule.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Det.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_EcuC.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Fota.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Mem_76_Pfls.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Os.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\ECU\Ecud_Rte.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Adc.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_BswM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Can.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_CanIf.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_CanSM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_CanTp.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_CanTrcv.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Com.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_ComM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Crc.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Dcm.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Det.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Dio.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Gpt.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Mcu.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Os.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_PduR.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Port.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Spi.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Bswmd\Bswmd_Wdg.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Composition\EcuExtract.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\DBImport\BCAN.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\DataTypes\AUTOSAR_DataTypes.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\DataTypes\AUTOSAR_DataTypes_Etc.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_App\App_Dcm.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_App\App_Mode.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_App\App_WdgM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\MODE_PortInterfaces.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\Swcd_Bsw_BswM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\Swcd_Bsw_Os.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\Swcd_CanTp.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\Swcd_ComM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Configuration\System\Swcd_Bsw\Swcd_Det.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_Crypto_76_HaeModule.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_Csm.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_EcuM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_Fota.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_KeyM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_Mem_76_Pfls.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_WdgIf.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\bswmd\Bswmd_WdgM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_Bsw_Csm.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_Bsw_Dcm.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_Bsw_EcuM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_Bsw_KeyM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_Fota.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Generated\Bsw_Output\swcd\Swcd_WdgM.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Static_Code\Modules\b_autosar_sys_EcuM_R40\generator\EcuM_PortInterface.arxml
 *      D:\00_Project\95_WPC_TYPE5\trunk\03.SW_DESIGN\4.SW_Integration\1.GN7_PE\1.GN7_PE_WPC_FBL\Static_Code\Modules\b_autosar_sys_WdgM_R40\generator\Swcd_WdgM_Fixed.arxml

 * GENERATED ON: The time-stamp is removed
*/

/*******************************************************************************
* PRE-JUSTIFICATION BEGINE SECTION (MISRA-C RULE CHECKER)
* These rules will not be applied for verification based on the MISRA Rule
* in Rte generated source
*******************************************************************************/
/*
  polyspace:begin<MISRA-C:5.1:Not a defect:Justify with annotations> Number of character is depends on user configuration
  polyspace:begin<MISRA-C:19.1:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Memory Mapping)
  polyspace:begin<MISRA-C:19.4:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1154, #6713)
  polyspace:begin<MISRA-C:19.6:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Memory Mapping)
  polyspace:begin<MISRA-C:19.7:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1236)
*/

/*******************************************************************************
**                         MULTIPLE INCLUSION PROTECTION                      **
*******************************************************************************/
 #ifndef RTE_CSM_H
      #define RTE_CSM_H
 /*
  * CAUTION:
  *
  * Do NOT
  *
  *   #define RTE_ALLOW_CROSS_HEADER_INCLUSION
  *
  * in ASW/BSW code. The symbol shall be used only for RTE internally.
  */
 #ifndef RTE_ALLOW_CROSS_HEADER_INCLUSION
      #ifdef RTE_APPLICATION_HEADER_FILE
      #error Multiple application header files included.
      #endif
      #define RTE_APPLICATION_HEADER_FILE
      #endif

/*******************************************************************************
**                  Include Section                                           **
*******************************************************************************/
/* polyspace:begin<MISRA-C:1.1:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Inclusion of Header Files) */
#include "Rte_Csm_Type.h"

/* polyspace:end<MISRA-C:1.1:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Inclusion of Header Files) */

/* COMPATIBLE WITH C and C++ languages */
#ifdef __cplusplus
 extern "C"
 {
#endif

/*******************************************************************************
**                      Version Information                                   **
*******************************************************************************/
#ifdef RTE_VENDOR_ID
  #if (RTE_VENDOR_ID != 76)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Vendor Id"
  #endif
#else
  #define RTE_VENDOR_ID 76
#endif

#ifdef RTE_MODULE_ID
  #if (RTE_MODULE_ID != 2)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Module Id"
  #endif
#else
  #define RTE_MODULE_ID 2
#endif

#ifdef RTE_SW_MAJOR_VERSION
  #if (RTE_SW_MAJOR_VERSION != 4)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Major Version"
  #endif
#else
  #define RTE_SW_MAJOR_VERSION 4
#endif

#ifdef RTE_SW_MINOR_VERSION
  #if (RTE_SW_MINOR_VERSION != 11)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Minor Version"
  #endif
#else
  #define RTE_SW_MINOR_VERSION 11
#endif

#ifdef RTE_SW_PATCH_VERSION
  #if (RTE_SW_PATCH_VERSION != 1)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Patch Version"
  #endif
#else
  #define RTE_SW_PATCH_VERSION 1
#endif

#ifdef RTE_AR_RELEASE_MAJOR_VERSION
  #if (RTE_AR_RELEASE_MAJOR_VERSION != 4)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Release Major Version"
  #endif
#else
  #define RTE_AR_RELEASE_MAJOR_VERSION 4
#endif

#ifdef RTE_AR_RELEASE_MINOR_VERSION
  #if (RTE_AR_RELEASE_MINOR_VERSION != 0)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Release Minor Version"
  #endif
#else
  #define RTE_AR_RELEASE_MINOR_VERSION 0
#endif

#ifdef RTE_AR_RELEASE_REVISION_VERSION
  #if (RTE_AR_RELEASE_REVISION_VERSION != 3)
    #error "Rte_Cfg.h : Mismatch in Rte Specification Release Revision Version"
  #endif
#else
  #define RTE_AR_RELEASE_REVISION_VERSION 3
#endif

/*******************************************************************************
** Init Macro
*******************************************************************************/

/******************************************************************************
** Type Definitions for Rte API                                               **
*******************************************************************************/

/*******************************************************************************
** Global Variables                                                           **
*******************************************************************************/

/*******************************************************************************
** Global Variables for Per Instance Memory                                   **
*******************************************************************************/

/*******************************************************************************
** Invalid Value Const Variables                                              **
*******************************************************************************/

/*******************************************************************************
** Macros for Direct API functions defined in PDS                             **
*******************************************************************************/

/*******************************************************************************
** Macros for InDirect(port oriented) API functions defined in PDS            **
*******************************************************************************/

/*******************************************************************************
** Type Definitions for port handles of PDS                                   **
*******************************************************************************/

/*******************************************************************************
** Type Definitions for component instance handles                            **
*******************************************************************************/
/*
  polyspace:begin<MISRA-C:5.7:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #3724)
*/
struct Rte_CDS_Csm
{
  VAR(uint8, RTE_DATA) _dummy;
};

/*
  polyspace:end<MISRA-C:5.7:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #3724)
*/
/*******************************************************************************
** Component instance handles                                                 **
*******************************************************************************/
#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h"
extern const struct Rte_CDS_Csm Rte_Inst_Csm;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h"

/*******************************************************************************
** Global Variables for Component Instance Handle                             **
*******************************************************************************/

/*******************************************************************************
** Type Definitions for component instance handles                            **
*******************************************************************************/

/*******************************************************************************
** Type Definitions for PerInstanceMemory (Exists only for multiple instances)**
*******************************************************************************/

/*******************************************************************************
** Macros for Direct API functions                                            **
*******************************************************************************/

/*******************************************************************************
** Macros for Exclusive Areas                                                 **
*******************************************************************************/

/*******************************************************************************
** Macros for ApplicationError in Client Server                               **
*******************************************************************************/

#ifndef RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_CSM_E_BUSY
#define RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_CSM_E_BUSY 2U
#endif

#ifndef RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_CSM_E_ENTROPY_EXHAUSTION
#define RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_CSM_E_ENTROPY_EXHAUSTION 4U
#endif

#ifndef RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_E_NOT_OK
#define RTE_E_CsmRandomGenerate_HaeHsmRandomGenerate_L9_E_NOT_OK 1U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_BUSY
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_BUSY 2U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_NOT_AVAILABLE
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_NOT_AVAILABLE 8U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_SIZE_MISMATCH
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_SIZE_MISMATCH 10U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_WRITE_FAIL
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_WRITE_FAIL 7U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_E_NOT_OK
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_E_NOT_OK 1U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_EMPTY
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_EMPTY 13U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_READ_FAIL
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_KEY_READ_FAIL 6U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_SMALL_BUFFER
#define RTE_E_CsmKeyManagement_CryptoKey_OEUK_CSM_E_SMALL_BUFFER 3U
#endif

#ifndef RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_CSM_E_BUSY
#define RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_CSM_E_BUSY 2U
#endif

#ifndef RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_CSM_E_ENTROPY_EXHAUSTION
#define RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_CSM_E_ENTROPY_EXHAUSTION 4U
#endif

#ifndef RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_E_NOT_OK
#define RTE_E_HaeHsmRandomGenerate_L10_RandomGenerate_L10_E_NOT_OK 1U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_BUSY
#define RTE_E_CsmSignatureVerify_CSM_E_BUSY 2U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_KEY_EMPTY
#define RTE_E_CsmSignatureVerify_CSM_E_KEY_EMPTY 13U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_KEY_NOT_VALID
#define RTE_E_CsmSignatureVerify_CSM_E_KEY_NOT_VALID 9U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_KEY_SIZE_MISMATCH
#define RTE_E_CsmSignatureVerify_CSM_E_KEY_SIZE_MISMATCH 10U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_SMALL_BUFFER
#define RTE_E_CsmSignatureVerify_CSM_E_SMALL_BUFFER 3U
#endif

#ifndef RTE_E_CsmSignatureVerify_E_NOT_OK
#define RTE_E_CsmSignatureVerify_E_NOT_OK 1U
#endif

#ifndef RTE_E_CsmSignatureVerify_CSM_E_JOB_CANCELED
#define RTE_E_CsmSignatureVerify_CSM_E_JOB_CANCELED 12U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_BUSY
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_BUSY 2U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_NOT_AVAILABLE
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_NOT_AVAILABLE 8U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_SIZE_MISMATCH
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_SIZE_MISMATCH 10U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_WRITE_FAIL
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_WRITE_FAIL 7U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_E_NOT_OK
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_E_NOT_OK 1U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_EMPTY
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_EMPTY 13U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_SMALL_BUFFER
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_SMALL_BUFFER 3U
#endif

#ifndef RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_READ_FAIL
#define RTE_E_CsmKeyManagement_CryptoKey_Dummy_CSM_E_KEY_READ_FAIL 6U
#endif

/*******************************************************************************
** Prototypes for Rte API                                                     **
*******************************************************************************/
#define RTE_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, RTE_CODE) Rte_Call_Csm_SignatureVerify_RSASSA_PKCS1_v1_5_CallbackNotification_CallbackNotification(
	/* polyspace<MISRA2012:D4.5:Not a defect:Justify with annotations> User defines parameter name */
	IN Csm_ResultType result);

#define RTE_STOP_SEC_CODE
#include "MemMap.h"

/*******************************************************************************
** API Mapping                                                                **
*******************************************************************************/
#ifndef Rte_Call_SignatureVerify_RSASSA_PKCS1_v1_5_CallbackNotification_CallbackNotification
#define Rte_Call_SignatureVerify_RSASSA_PKCS1_v1_5_CallbackNotification_CallbackNotification Rte_Call_Csm_SignatureVerify_RSASSA_PKCS1_v1_5_CallbackNotification_CallbackNotification
#endif

/*******************************************************************************
** Client Server Macro                                                        **
*******************************************************************************/

/*******************************************************************************
** Prototypes for Runnable entities                                           **
*******************************************************************************/
/*
  polyspace:begin<MISRA-C:8.8:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1132)
*/

#define Csm_START_SEC_CODE
#include "Csm_MemMap.h"
FUNC(Std_ReturnType, Csm_CODE) Csm_CancelJob(IN VAR(uint32, AUTOMATIC) job, IN VAR(Crypto_OperationModeType, AUTOMATIC) mode);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyCopy(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) targetKeyId);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyDerive(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) targetKeyId);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyElementCopy(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) keyElementId, IN VAR(uint32, AUTOMATIC) targetKeyId, IN VAR(uint32, AUTOMATIC) targetKeyElementId);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyElementCopyPartial(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) keyElementId, IN VAR(uint32, AUTOMATIC) keyElementSourceOffset, IN VAR(uint32, AUTOMATIC) keyElementTargetOffset, IN VAR(uint32, AUTOMATIC) keyElementCopyLength, IN VAR(uint32, AUTOMATIC) targetKeyId, IN VAR(uint32, AUTOMATIC) targetKeyElementId);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyElementGet(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) keyElementId, OUT P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) keyPtr, INOUT P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) keyLengthPtr);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyElementSet(IN VAR(uint32, AUTOMATIC) keyId, IN VAR(uint32, AUTOMATIC) keyElementId, IN P2VAR(const unsigned char, AUTOMATIC, RTE_APPL_DATA) keyPtr, IN VAR(uint32, AUTOMATIC) keyLength);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyExchangeCalcPubVal(IN VAR(uint32, AUTOMATIC) keyId, OUT P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) publicValuePtr, INOUT P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) publicValueLengthPtr);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyExchangeCalcSecret(IN VAR(uint32, AUTOMATIC) keyId, IN P2VAR(const unsigned char, AUTOMATIC, RTE_APPL_DATA) partnerPublicValuePtr, IN VAR(uint32, AUTOMATIC) partnerPublicValueLength);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeyGenerate(IN VAR(uint32, AUTOMATIC) keyId);

FUNC(Std_ReturnType, Csm_CODE) Csm_KeySetValid(IN VAR(uint32, AUTOMATIC) keyId);

FUNC(void, Csm_CODE) Csm_MainFunction(void);

FUNC(Std_ReturnType, Csm_CODE) Csm_RandomGenerate(IN VAR(uint32, AUTOMATIC) jobId, OUT P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) resultPtr, INOUT P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) resultLengthPtr);

FUNC(Std_ReturnType, Csm_CODE) Csm_RandomSeed(IN VAR(uint32, AUTOMATIC) keyId, IN P2VAR(const unsigned char, AUTOMATIC, RTE_APPL_DATA) seedPtr, IN VAR(uint32, AUTOMATIC) seedLength);

FUNC(Std_ReturnType, Csm_CODE) Csm_SignatureVerify(IN VAR(uint32, AUTOMATIC) jobId, IN VAR(Crypto_OperationModeType, AUTOMATIC) mode, IN P2VAR(const unsigned char, AUTOMATIC, RTE_APPL_DATA) dataPtr, IN VAR(uint32, AUTOMATIC) dataLength, IN P2VAR(const unsigned char, AUTOMATIC, RTE_APPL_DATA) signaturePtr, IN VAR(uint32, AUTOMATIC) signatureLength, OUT P2VAR(Crypto_VerifyResultType, AUTOMATIC, RTE_APPL_DATA) verifyPtr);

#define Csm_STOP_SEC_CODE
#include "Csm_MemMap.h"

/*
  polyspace:end<MISRA-C:8.8:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1132)
*/

/*******************************************************************************
** Runnables Mapping                                                          **
*******************************************************************************/
#ifndef RTE_RUNNABLE_CancelJob
#define RTE_RUNNABLE_CancelJob Csm_CancelJob
#endif
#ifndef RTE_RUNNABLE_KeyCopy
#define RTE_RUNNABLE_KeyCopy Csm_KeyCopy
#endif
#ifndef RTE_RUNNABLE_KeyDerive
#define RTE_RUNNABLE_KeyDerive Csm_KeyDerive
#endif
#ifndef RTE_RUNNABLE_KeyElementCopy
#define RTE_RUNNABLE_KeyElementCopy Csm_KeyElementCopy
#endif
#ifndef RTE_RUNNABLE_KeyElementCopyPartial
#define RTE_RUNNABLE_KeyElementCopyPartial Csm_KeyElementCopyPartial
#endif
#ifndef RTE_RUNNABLE_KeyElementGet
#define RTE_RUNNABLE_KeyElementGet Csm_KeyElementGet
#endif
#ifndef RTE_RUNNABLE_KeyElementSet
#define RTE_RUNNABLE_KeyElementSet Csm_KeyElementSet
#endif
#ifndef RTE_RUNNABLE_KeyExchangeCalcPubVal
#define RTE_RUNNABLE_KeyExchangeCalcPubVal Csm_KeyExchangeCalcPubVal
#endif
#ifndef RTE_RUNNABLE_KeyExchangeCalcSecret
#define RTE_RUNNABLE_KeyExchangeCalcSecret Csm_KeyExchangeCalcSecret
#endif
#ifndef RTE_RUNNABLE_KeyGenerate
#define RTE_RUNNABLE_KeyGenerate Csm_KeyGenerate
#endif
#ifndef RTE_RUNNABLE_KeySetValid
#define RTE_RUNNABLE_KeySetValid Csm_KeySetValid
#endif
#ifndef RTE_RUNNABLE_MainFunction
#define RTE_RUNNABLE_MainFunction Csm_MainFunction
#endif
#ifndef RTE_RUNNABLE_RandomGenerate
#define RTE_RUNNABLE_RandomGenerate Csm_RandomGenerate
#endif
#ifndef RTE_RUNNABLE_RandomSeed
#define RTE_RUNNABLE_RandomSeed Csm_RandomSeed
#endif
#ifndef RTE_RUNNABLE_SignatureVerify
#define RTE_RUNNABLE_SignatureVerify Csm_SignatureVerify
#endif

/* COMPATIBLE WITH C and C++ languages */
#ifdef __cplusplus
 }
#endif

#endif

/*******************************************************************************
* PRE-JUSTIFICATION END SECTION (MISRA-C RULE CHECKER)
*******************************************************************************/
/*
  polyspace:end<MISRA-C:5.1:Not a defect:Justify with annotations> Number of character is depends on user configuration
  polyspace:end<MISRA-C:19.1:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Memory Mapping)
  polyspace:end<MISRA-C:19.4:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1154, #6713)
  polyspace:end<MISRA-C:19.6:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Memory Mapping)
  polyspace:end<MISRA-C:19.7:Not a defect:Justify with annotations> No Impact of this rule violation (AUTOSAR Standard : Rte SWS #1236)
*/

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/

