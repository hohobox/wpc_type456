/*!
  @file CryptoService_Ecc.h
  @brief Crypto API header file for ECC
  @note Copyright 2020 by HYUNDAI AUTOEVER Corp. All rights reserved.
*/
#ifndef CRYPTOSERVICE_ECC_H_
#define CRYPTOSERVICE_ECC_H_

#include "Hsm_Types.h"

/******************************************************************************/
/*                                    Define                                  */
/******************************************************************************/
#include "CryptoService_Def.h"

/******************************************************************************/
/*                                  Type Define                               */
/******************************************************************************/
/*! Signature structure value generated by ECC ECDSA operation */
typedef struct
{
	UINT8 r[ECC_BYTES_SIZE]; /**<  Bytes to r */
	UINT8 s[ECC_BYTES_SIZE]; /**<  Bytes to s */
} ECC_ECDSA_SIGN_t;

/*! Public key structure value of the other party to share the secret value */
typedef struct
{
	UINT8 x[ECC_BYTES_SIZE]; /**<  Pointer to x */
	UINT8 y[ECC_BYTES_SIZE]; /**<  Pointer to y */
} ECC_PUBLICKEY_t;

/****************************************************************************/
/*                             ECC ECDSA SIGN                               */
/****************************************************************************/
/*!
  @brief This API requests the HSM framework's ECC ECDSA Sign Start service
  @param[in, out] eccCtx    ECC context
  @param[in] eccKeyNum      ECC key number
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaSignStart(HSMAPI_CTX_t *eccCtx, UINT16 eccKeyNum);

/*!
  @brief This API requests the HSM framework's ECC ECDSA Sign Update service
  @details Before performing the function, the digest value should be generated through a SHA256 hash function. \n
        The function does not wait for HSM response. \n
        After calling the function, the user need to check the execution result of the HSM by calling the 'HSM_WaitCtxResp()' function of the HSM driver.
  @param[in, out] eccCtx    ECC context  
  @param[in] digest         32-bytes SHA256 digest value
  @param[in] secretNumber   32-bytes random value to use for signature generation
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaSignUpdate(const HSMAPI_CTX_t *eccCtx, const UINT8 *digest, const UINT8 *secretNumber);

/*!
  @brief This API requests the HSM framework's ECC ECDSA Sign Finish service
  @details The resulting signature value is stored in the ��sign�� structure variable.
  @param[in, out] eccCtx    ECC context  
  @param[out] sign          Signature structure value generated by ECC ECDSA operation
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaSignFinish(const HSMAPI_CTX_t *eccCtx, ECC_ECDSA_SIGN_t *sign);

/****************************************************************************/
/*                           ECC ECDSA VERIFY                               */
/****************************************************************************/
/*!
  @brief This API requests the HSM framework's ECC ECDSA Verify Start service
  @param[in, out] eccCtx    ECC context  
  @param[out] eccKeyNum     ECC key number
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaVerifyStart(HSMAPI_CTX_t *eccCtx, UINT16 eccKeyNum);

/*!
  @brief This API requests the HSM framework's ECC ECDSA Verify Update service
  @details Before performing the function, the digest value should be generated through a SHA256 hash function. \n
        The function does not wait for HSM response. \n
        After calling the function, the user need to check the execution result of the HSM by calling the 'HSM_WaitCtxResp()' function of the HSM driver.
  @param[in, out] eccCtx    ECC context  
  @param[in] digest         32-bytes SHA256 digest value
  @param[in] sign           Signature structure value to validate
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaVerifyUpdate(const HSMAPI_CTX_t *eccCtx, const UINT8 *digest, const ECC_ECDSA_SIGN_t *sign);

/*!
  @brief This API requests the HSM framework's ECC ECDSA Verify Finish service
  @details The ECC ECDSA Verify result is stored in the ��result�� variable. \n
        If the validation succeeds, the value of HSM_VERIFY_SUCCESS (0) is stored in the ��result�� variable. \n
        If unsuccessful, the value of HSM_VERIFY_FAILURE (1) is stored.
  @param[in, out] eccCtx    ECC context  
  @param[out] result        1-byte verification result value
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdsaVerifyFinish(const HSMAPI_CTX_t *eccCtx, UINT8 *result);

/****************************************************************************/
/*                                ECC ECDH                                  */
/****************************************************************************/
/*!
  @brief This API requests the HSM framework's ECC ECDH Start service
  @param[in, out] eccCtx    ECC context  
  @param[in] eccKeyNum      ECC key number
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdhStart(HSMAPI_CTX_t *eccCtx, UINT16 eccKeyNum);

/*!
  @brief This API requests the HSM framework's ECC ECDH Update service
  @details The function does not wait for HSM response. \n
        After calling the function, the user should check the execution result of the HSM by calling the HSM_WaitCtxResp() function of the HSM driver.
  @param[in, out] eccCtx        ECC context  
  @param[in] pubkeyOtherSide    Public key structure value of the other party to share the secret value
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdhUpdate(const HSMAPI_CTX_t *eccCtx, const ECC_PUBLICKEY_t *pubkeyOtherSide);

/*!
  @brief This API requests the HSM framework's ECC ECDH Finish service
  @details The ECC ECDH result is stored in the ��secretValue�� variable.
  @param[in, out] eccCtx        ECC context  
  @param[out] secretValue       32-bytes shared secret value
  @return E_OK: This is returned when a function execution is successful. \n
        E_NOT_OK: This is returned when a function execution fails. \n
        HSM_E_BUSY: HSM internal task is busy. \n
        HSM_E_WAIT: HSM is still working with HOST's request. \n
        HSM_E_WRONG_SEQ: API call sequence is incorrect. \n
        HSM_E_NOT_SUPPORTED: Not supported feature in HSM Framework. \n
        HSM_E_LENGTH_NOT_VALID: Invalid parameter length. \n
        HSM_E_VALUE_NOT_VALID: Invalid parameter value. \n
        HSM_E_KEY_NOT_VALID: Invalid key index parameter. \n
        HSM_E_UNINIT: HSM_DriverInitialize is not performed
*/
Std_ReturnType HSM_EccEcdhFinish(const HSMAPI_CTX_t *eccCtx, UINT8 *secretValue);

#endif /* CRYPTOSERVICE_ECC_H_ */
